{"version":3,"sources":["components/Landing.jsx","components/Checkbox.jsx","components/survey_learner/Page1.jsx","components/BlockSelection.jsx","components/Radio.jsx","components/survey_learner/Page2.jsx","components/survey_learner/Page3.jsx","components/survey_learner/Page4.jsx","components/ProgressBar.jsx","components/survey_learner/Survey.jsx","components/survey_professional/Page1.jsx","components/survey_professional/Page2.jsx","components/survey_professional/Page3.jsx","components/survey_professional/Survey.jsx","components/survey_organization/Page1.jsx","components/survey_organization/Page2.jsx","components/survey_organization/Page3.jsx","components/survey_organization/Survey.jsx","components/survey_corporation/Page1.jsx","components/survey_corporation/Page2.jsx","components/survey_corporation/Page3.jsx","components/survey_corporation/Survey.jsx","components/Thanks.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["props","setSurvey","useState","select","setSelect","choiceRef","useRef","useEffect","animateScroll","scrollToTop","duration","setOption","option","checkOptionClass","className","src","alt","ref","onClick","type","href","options","fieldName","fieldValue","fieldLabel","setFieldValue","check","setCheck","name","checked","onChange","setPage","setValues","initialState","values","useReducer","curVals","newVals","surveyValues","setSurveyValues","email","city","state","age","school","educationLevel","errors","setErrors","gender","ethnicity","schoolCheck","handleChange","e","currentTarget","value","handleSelect","opt","field","schoolOptions","fieldCheck","checkState","slice","Object","assign","Tooltip","arrow","open","placement","title","classNamePrefix","label","placeholder","min","max","disabled","Checkbox","exclusions","newErrors","isError","handleNext","blocks","exclusive","merge","otherOptions","noneOptions","numSelect","setNumSelect","keys","reduce","accumulator","currentValue","parseInt","blockList","specialBlockList","handleToggle","block","blockValues","setBlockValues","handleSetExclusive","i","push","length","handleOtherText","sliderLabels","radioWidth","Math","id","htmlFor","style","width","isTabletorMobile","useMediaQuery","maxWidth","subjectsPlanned","subjectsOther","industryInterested","industryInformed","industryInformedExplain","industryExposed","subjectsOtherCheck","handleSetBlocks","otherCheck","surveyBlockValue","includes","subjectsPlannedOptions","subjectsOtherCheckOptions","industryInterestedOptions","industryExposedOptions","industryInformedOptions","BlockSelection","Radio","classToBusiness","classToTechnology","collaborateWithPeers","professionalMentorship","collaboratingContact","timeRemote","activitiesEnjoy","classToBusinessCheck","classToTechnologyCheck","collaborateWithPeersCheck","professionalMentorshipCheck","timeRemoteCheck","handleSetCheckbox","classToBusinessOptions","classToBusinessCheckOptions","classToTechnologyOptions","classToTechnologyCheckOptions","collaborateWithPeersOptions","collaborateWithPeersCheckOptions","professionalMentorshipOptions","professionalMentorshipCheckOptions","collaboratingContactOptions","timeRemoteOptions","val","valueLabelDisplay","valueLabelFormat","num","timeRemoteCheckOptions","activitiesEnjoyOptions","Slider","setLogo","interestAttend","attendMeetPref","attendTimePref","participateFrequency","interestTIV","additionalComments","charRemain","interestTIVCheck","interestAttendOptions","attendMeetPrefOptions","attendTimePrefOptions","participateFrequencyOptions","interestTIVOptions","interestTIVCheckOptions","maxLength","wrap","rows","handleTextArea","submit","handleSubmit","survey","page","progress","currentCheck","nodeNum","completeCheck","1","2","3","4","progWidth","values1","setValues1","values2","setValues2","values3","setValues3","values4","setValues4","stringifyBlock","blockData","labels","stringOutput","ProgressBar","Page1","Page2","Page3","Page4","data","$","ajax","url","process","method","dataType","phone","industryWork","yourProfession","professionalUrl","areasExpertise","volunteer","volunteerLevel","volunteerFrequency","volunteerFrequencyAmount","volunteerFrequencyTime","industryWorkOptions","volunteerOptions","volunteerLevelOptions","volunteerFrequencyTimeOptions","volunteerInterest","volunteerWay","subjectsInterested","levelInstruction","volunteerAmount","timesAvailable","ageGroups","importanceTeach","volunteerAmountMonth","volunteerAmountWeek","volunteerAmountCheck","importanceTeachComments","volunteerInterestOptions","volunteerWayOptions","subjectsInterestedOptions","levelInstructionOptions","volunteerAmountCheckOptions","timesAvailableOptions","ageGroupsOptions","importanceTeachOptions","orgName","affiliation","partnerInterest","partnerCurrent","learnerAmount","learnerAge","learnerGrade","learnerGradeAccess","ethnicityDistribution","instructionDistribution","learnerSubjects","learnerInstructLevel","handleSetGroupInput","fieldCopy","partnerInterestOptions","partnerCurrentOptions","learnerAmountOptions","learnerAgeOptions","learnerGradeOptions","learnerGradeAccessOptions","learnerSubjectsOptions","learnerInstructLevelOptions","preventDefault","programProvide","programProvideSpecify","studentInterest","studentAttendFrequency","studentAttendTimes","studentTransportation","studentActivities","studentAttendFrequencyCheck","programProvideOptions","programProvideSpecifyOptions","studentInterestOptions","studentAttendFrequencyCheckOptions","studentAttendTimesOptions","studentTransportationOptions","studentActivitiesOptions","stringifyGroup","groupData","groupArr","key","join","console","log","companyName","industry","interestPrograms","genderDistribution","learnerAttendFrequency","ethnicityDistributionCheck","genderDistributionCheck","learnerAttendFrequencyCheck","interestProgramsOptions","ethnicityDistributionCheckOptions","genderDistributionCheckOptions","learnerAttendFrequencyCheckOptions","interestSponsor","interestSponsorSpecify","interestHost","interestHostFrequency","interestVolunteer","interestVolunteerRole","interestDonate","interestDonateType","interestHostFrequencyAmount","interestHostFrequencyTime","interestSponsorOptions","interestHostOptions","interestHostFrequencyTimeOptions","interestVolunteerOptions","interestVolunteerRoleOptions","interestDonateOptions","interestDonateTypeOptions","logo","Landing","Survey","renderSurvey","Thanks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c196e40.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { animateScroll } from 'react-scroll';\r\nimport '../tailwind.css';\r\nimport './landing.scss';\r\nimport './landing_mobile.scss';\r\n\r\nexport default props => {\r\n  const { setSurvey } = props;\r\n  const [select, setSelect] = useState('Landing');\r\n  const choiceRef = useRef();\r\n\r\n  useEffect(() => animateScroll.scrollToTop({ duration: 100 }), []);\r\n\r\n  const setOption = option => select === option ? setSelect('Landing') : setSelect(option);\r\n  const checkOptionClass = option => select === option ? ' selected' : '';\r\n\r\n  return <div className='landing-container'>\r\n    <div className='header'>\r\n      <div className='logo-container'>\r\n        <img className='logo' src='img/logo_light.png' alt='TIV - Technology Innovation Village' />\r\n      </div>\r\n    </div>\r\n    <div className='splash'>\r\n      <div className='splash-container'>\r\n        <div className='text-container'>\r\n          <img className='img-text' src='img/header_txt_u426.png' alt='Online Research Survey for EDUCATION - Your input makes a difference' />\r\n          <span className='text'>Complete the survey for a chance to win a $50 gift card!</span>\r\n        </div>\r\n        <div className='img-container'>\r\n          <img className='img-prize' src='img/50-gift-card.png' alt='$50 gift card' />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className='choice-container' ref={choiceRef}>\r\n      <div className='text-container'>\r\n        <h2>The Survey</h2>\r\n        <p>\r\n          Are you a (1) <b>student (ages 9-25)</b>, (2) <b>professional</b>, (3) <b>organization that serves youth & young adults</b>, or (4) <b>company</b>? If so, help us to develop a dynamic impact-driven platform, <b>Tech Innovation Villages</b> (TIV). It truly does take a village!\r\n        </p>\r\n        <h3>Start by letting us know who you are</h3>\r\n        <p>\r\n          The sole purpose of the survey is to collect data — we are not asking you to sign up for anything.<br></br>\r\n          <b>The survey will only take around 5 minutes</b>, and once completed you will be entered into a drawing to <b>win a $50 Visa gift card</b>.\r\n        </p>\r\n      </div>\r\n      <div className='option-container'>\r\n        <div className={'option select-none' + checkOptionClass('learner/student')}\r\n          onClick={() => setOption('learner/student')}>\r\n          <i className='fas fa-user-graduate' />\r\n          {checkOptionClass('learner/student') ? <i className='fas fa-check-circle' /> : ''}\r\n          <div className='choice-text-container'>\r\n            <span>Learners/Students</span>\r\n            <span className='info'>Includes recent grads (ages 9-25)</span>\r\n          </div>\r\n        </div>\r\n        <div className={'option select-none' + checkOptionClass('professional')}\r\n          onClick={() => setOption('professional')}>\r\n          <i className='fas fa-briefcase' />\r\n          {checkOptionClass('professional') ? <i className='fas fa-check-circle' /> : ''}\r\n          <div className='choice-text-container'>\r\n            <span>Professionals</span>\r\n            <span className='info'>All industries</span>\r\n          </div>\r\n        </div>\r\n        <div className={'option select-none' + checkOptionClass('organization/academic institution')}\r\n          onClick={() => setOption('organization/academic institution')}>\r\n          <i className='fas fa-school' />\r\n          {checkOptionClass('organization/academic institution') ? <i className='fas fa-check-circle' /> : ''}\r\n          <div className='choice-text-container'>\r\n            <span>Organizations</span>\r\n            <span className='info'>Includes academic institutions</span>\r\n          </div>\r\n        </div>\r\n        <div className={'option select-none' + checkOptionClass('corporation')}\r\n          onClick={() => setOption('corporation')}>\r\n          <i className='far fa-building' />\r\n          {checkOptionClass('corporation') ? <i className='fas fa-check-circle' /> : ''}\r\n          <div className='choice-text-container'>\r\n            <span>Companies</span>\r\n            <span className='info'>All industries</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button className={select !== 'Landing' ? 'selected' : ''} type='button'\r\n        onClick={() => setSurvey(select)}>Go To Survey</button>\r\n    </div>\r\n    <div className='info-container-1'>\r\n      <h2>About TIV</h2>\r\n      <div className='info-wrapper'>\r\n        <div className='text-container'>\r\n          <p>\r\n            TIV prepares <b>youth and young adults ages 9-25</b>, <b>including students and recent graduates</b>, for the 21st century workforce. TIV offers <b>FREE</b> business and technology-driven project-based learning programs. Programs are uniquely designed to provide talent, in <b>underserved and underbanked communities</b> across the nation, exposure to various disciplines, industries and job sectors.\r\n          </p>\r\n          <p>\r\n            TIV will offer <b>in-person, virtual and hybrid</b> programs that provide real-world learning experiences. It’s a dynamic opportunity for aspiring and emerging talent to cultivate their knowledge and skills.\r\n          </p>\r\n          <p>\r\n            TIV will also serve as an extension of programming for <b>educational institutions</b> and <b>community youth-based organizations</b>.\r\n          </p>\r\n          <p>\r\n            <a className='ref' href='https://www.bstemproject.org/'>B~STEM Project</a> is a nonprofit organization committed to providing free and equitable educational and professional development experiences to foster the next generation of talent.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className='info-container-2'>\r\n      <div className='info-wrapper'>\r\n        <div className='text-container'>\r\n          <h4>Our Mission</h4>\r\n          <p>\r\n            TIV’s mission is to <b>educate and empower youth and young adults</b> interested in cultivating business and tech skills across all industries and job sectors.\r\n          </p>\r\n          <a className='ref' href='https://www.bstemproject.org/'>Learn more about us</a>\r\n        </div>\r\n        <div className='socials-container'>\r\n          <h4>Connect with us</h4>\r\n          <div className='icon-container'>\r\n            <a href='https://twitter.com/bstemproject'><i className='fab fa-twitter' /></a>\r\n            <a href='https://www.facebook.com/bstemproject/'><i className='fab fa-linkedin-in' /></a>\r\n            <a href='https://www.facebook.com/bstemproject/'><i className='fab fa-facebook-f' /></a>\r\n            <a href='https://www.instagram.com/bstemproject/'><i className='fab fa-instagram' /></a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <footer>\r\n      <div className='text-container'>\r\n        <h4>© 2021 All Rights Reserved.</h4>\r\n      </div>\r\n    </footer>\r\n  </div>\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nexport default props => {\r\n  const { className, fieldName, fieldValue, fieldLabel, setFieldValue } = props.options;\r\n  const [check, setCheck] = useState(fieldValue);\r\n\r\n  const handleToggle = () => setCheck(check ? 0 : 1);\r\n\r\n  useEffect(() => setFieldValue(fieldName, check), [check])\r\n\r\n  return <div className={'checkbox-container' + (className ? ' ' + className : '')}>\r\n    <input type='checkbox' name={fieldName} checked={check || ''} onChange={() => handleToggle()} />\r\n    <label>{fieldLabel}</label>\r\n  </div>\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { animateScroll } from 'react-scroll';\r\nimport Checkbox from '../Checkbox';\r\n\r\nexport default props => {\r\n  const { setSurvey, setPage, setValues } = props;\r\n  const initialState = props.values;\r\n\r\n  const [surveyValues, setSurveyValues] = useReducer(\r\n    (curVals, newVals) => ({ ...curVals, ...newVals }), initialState\r\n  )\r\n  const [errors, setErrors] = useState({ name: 0, email: 0, city: 0, state: 0, age: 0, school: 0, educationLevel: 0 });\r\n  const { name, email, city, state, age, gender, ethnicity, school, schoolCheck, educationLevel } = surveyValues;\r\n\r\n  useEffect(() => animateScroll.scrollToTop({ duration: 100 }), []);\r\n  useEffect(() => setValues(surveyValues), [surveyValues]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setSurveyValues({ [name]: value });\r\n  };\r\n  const handlePrevious = () => setSurvey('Landing');\r\n  const handleNext = exclusions => {\r\n    let newErrors = Object.assign({}, errors);\r\n    let isError = false;\r\n\r\n    for (let field in errors) {\r\n      if (\r\n        ((field === 'age') && (!surveyValues[field] || (surveyValues[field] < 1 || surveyValues[field] > 100))) ||\r\n        ((field === 'school') && !surveyValues[field] && !surveyValues['schoolCheck']) ||\r\n        ((field !== 'age') && (field !== 'school') && !surveyValues[field])\r\n      ) {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 1 });\r\n        isError = true;\r\n      } else {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 0 });\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    if (!isError) setPage(2);\r\n    else animateScroll.scrollToTop({ duration: 100 });\r\n  };\r\n\r\n  const handleSelect = (opt, field) => setSurveyValues({ [field]: opt['value'] });\r\n  const handleSetCheckbox = (fieldCheck, checkState) => {\r\n    let fieldName = fieldCheck.slice(0, -5);\r\n    if (checkState) {\r\n      setSurveyValues({ [fieldName]: '' });\r\n      setErrors(Object.assign({}, errors, { [fieldName]: 0 }));\r\n    }\r\n    setSurveyValues({ [fieldCheck]: checkState });\r\n  };\r\n\r\n  const stateOptions = [\r\n    {value: 'Alabama', label: 'Alabama'}, {value: 'Alaska', label: 'Alaska'}, {value: 'Arizona', label: 'Arizona'}, {value: 'Arkansas', label: 'Arkansas'}, {value: 'California', label: 'California'},\r\n    {value: 'Colorado', label: 'Colorado'}, {value: 'Connecticut', label: 'Connecticut'}, {value: 'Delaware', label: 'Delaware'}, {value: 'Florida', label: 'Florida'}, {value: 'Georgia', label: 'Georgia'},\r\n    {value: 'Hawaii', label: 'Hawaii'}, {value: 'Idaho', label: 'Idaho'}, {value: 'Illinois', label: 'Illinois'}, {value: 'Indiana', label: 'Indiana'}, {value: 'Iowa', label: 'Iowa'},\r\n    {value: 'Kansas', label: 'Kansas'}, {value: 'Kentucky', label: 'Kentucky'}, {value: 'Louisiana', label: 'Louisiana'}, {value: 'Maine', label: 'Maine'}, {value: 'Maryland', label: 'Maryland'},\r\n    {value: 'Massachusetts', label: 'Massachusetts'}, {value: 'Michigan', label: 'Michigan'}, {value: 'Minnesota', label: 'Minnesota'}, {value: 'Mississippi', label: 'Mississippi'}, {value: 'Missouri', label: 'Missouri'},\r\n    {value: 'Montana', label: 'Montana'}, {value: 'Nebraska', label: 'Nebraska'}, {value: 'Nevada', label: 'Nevada'}, {value: 'New Hampshire', label: 'New Hampshire'}, {value: 'New Jersey', label: 'New Jersey'},\r\n    {value: 'New Mexico', label: 'New Mexico'}, {value: 'New York', label: 'New York'}, {value: 'North Carolina', label: 'North Carolina'}, {value: 'North Dakota', label: 'North Dakota'}, {value: 'Ohio', label: 'Ohio'},\r\n    {value: 'Oklahoma', label: 'Oklahoma'}, {value: 'Oregon', label: 'Oregon'}, {value: 'Pennsylvania', label: 'Pennsylvania'}, {value: 'Rhode Island', label: 'Rhode Island'}, {value: 'South Carolina', label: 'South Carolina'},\r\n    {value: 'South Dakota', label: 'South Dakota'}, {value: 'Tennessee', label: 'Tennessee'}, {value: 'Texas', label: 'Texas'}, {value: 'Utah', label: 'Utah'}, {value: 'Vermont', label: 'Vermont'},\r\n    {value: 'Virginia', label: 'Virginia'}, {value: 'Washington', label: 'Washington'}, {value: 'West Virginia', label: 'West Virginia'}, {value: 'Wisconsin', label: 'Wisconsin'}, {value: 'Wyoming', label: 'Wyoming'}\r\n  ];\r\n  const genderOptions = [\r\n    {value: 'Female', label: 'Female'}, {value: 'Male', label: 'Male'},\r\n    {value: 'Non-binary', label: 'Non-binary'}, {value: 'Transgender', label: 'Transgender'},\r\n    {value: 'Intersex', label: 'Intersex'}, {value: 'I prefer not to say', label: 'I prefer not to say'}\r\n  ];\r\n  const ethnicityOptions = [\r\n    {value: 'Asian or Pacific Islander', label: 'Asian or Pacific Islander'},\r\n    {value: 'Black or African American', label: 'Black or African American'},\r\n    {value: 'Hispanic or Latino', label: 'Hispanic or Latino'},\r\n    {value: 'Native American or Alaskan Native', label: 'Native American or Alaskan Native'},\r\n    {value: 'White or Caucasian', label: 'White or Caucasian'},\r\n    {value: 'Multiracial or Biracial', label: 'Multiracial or Biracial'},\r\n    {value: 'A race/ethnicity not listed here', label: 'A race/ethnicity not listed here'}\r\n  ];\r\n  const schoolOptions= {\r\n    fieldName: 'schoolCheck',\r\n    fieldValue: schoolCheck,\r\n    fieldLabel: 'I\\'m not in school or part of an academic institution',\r\n    setFieldValue: handleSetCheckbox,\r\n  };\r\n  const educationLevelOptions = [\r\n    {value: 'No schooling completed', label: 'No schooling completed'},\r\n    {value: 'Nursery school to 8th grade', label: 'Nursery school to 8th grade'},\r\n    {value: 'Some high school, no diploma', label: 'Some high school, no diploma'},\r\n    {value: 'High school graduate or equivalent', label: 'High school graduate or equivalent'},\r\n    {value: 'Some college credit, no degree', label: 'Some college credit, no degree'},\r\n    {value: 'Trade/technical/vocational training', label: 'Trade/technical/vocational training'},\r\n    {value: 'Associate degree', label: 'Associate degree'},\r\n    {value: 'Bachelor’s degree', label: 'Bachelor’s degree'},\r\n    {value: 'Master’s degree', label: 'Master’s degree'},\r\n    {value: 'Professional degree', label: 'Professional degree'},\r\n    {value: 'Doctorate degree', label: 'Doctorate degree'},\r\n  ];\r\n\r\n  return (\r\n    <div className='learner-page-1-container'>\r\n      <h1>Tell us about yourself</h1>\r\n      <h2>Basic information</h2>\r\n      <h3>This form must be filled out by a parent or guardian if the Participant is underage.</h3>\r\n      <h3>All fields required unless marked as \"Optional\".</h3>\r\n      <div className='field-container'>\r\n        <Tooltip arrow={true} open={errors['name'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Name\r\n            <input type='text' name='name' value={name || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['email'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Email\r\n            <input className={errors['email'] ? 'error' : ''} type='text' name='email' value={email || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['city'] ? true : false} placement='top-start' title='Required'>\r\n          <label>City\r\n            <input className={errors['city'] ? 'error' : ''} type='text' name='city' value={city || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['state'] ? true : false} placement='top-start' title='Required'>\r\n          <label>State\r\n            <Select className='select-container' classNamePrefix='react-select'\r\n              options={stateOptions}\r\n              placeholder='Please Select' value={state ? { value: state, label: state } : ''}\r\n              onChange={opt => handleSelect(opt, 'state')}/>\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['age'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Age\r\n            <input className={errors['age'] ? 'error' : ''} type='number' min='1' max='100' name='age' value={age || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <label>Gender (Optional)\r\n          <Select className='select-container' classNamePrefix='react-select'\r\n            options={genderOptions}\r\n            placeholder='Please Select' value={gender ? { value: gender, label: gender } : ''}\r\n            onChange={opt => handleSelect(opt, 'gender')}/>\r\n        </label>\r\n        <label>Ethnicity (Optional)\r\n          <Select className='select-container' classNamePrefix='react-select'\r\n            options={ethnicityOptions}\r\n            placeholder='Please Select' value={ethnicity ? { value: ethnicity, label: ethnicity } : ''}\r\n            onChange={opt => handleSelect(opt, 'ethnicity')}/>\r\n        </label>\r\n        <div className='checkbox-wrapper'>\r\n          <Tooltip arrow={true} open={errors['school'] ? true : false} placement='top-start' title='Required'>\r\n            <label>School or Academic Institution\r\n              <input className={schoolCheck ? 'disabled' : ''}\r\n                disabled={schoolCheck} type='text' name='school' value={school || ''} onChange={e => handleChange(e)} />\r\n            </label>\r\n          </Tooltip>\r\n          <Checkbox options={schoolOptions} />\r\n        </div>\r\n        <Tooltip arrow={true} open={errors['educationLevel'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Education Level\r\n            <Select className='select-container' classNamePrefix='react-select'\r\n              options={educationLevelOptions}\r\n              placeholder='Please Select' value={educationLevel ? { value: educationLevel, label: educationLevel } : ''}\r\n              onChange={opt => handleSelect(opt, 'educationLevel')}/>\r\n          </label>\r\n        </Tooltip>\r\n      </div>\r\n      <div className='btn-container'>\r\n        <button className='btn-prev' type='button'\r\n          onClick={() => handlePrevious()}>\r\n          Previous\r\n        </button>\r\n        <button className='btn-next' type='button'\r\n          onClick={() => handleNext()}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\n\r\nexport default props => {\r\n  const { className, fieldName, setFieldValue, blocks, exclusive, merge, otherOptions, noneOptions } = props.options;\r\n  const [numSelect, setNumSelect] = useState(0);\r\n\r\n  const initialState = props.options.fieldValue || {};\r\n  useEffect(() => {\r\n    if (!exclusive && noneOptions) {\r\n      let keys = Object.keys(initialState);\r\n      if (initialState[noneOptions['name']]) setNumSelect(0);\r\n      else setNumSelect(Object.values(initialState).reduce((accumulator, currentValue) => parseInt(accumulator) + (parseInt(currentValue) || 0), 0))\r\n    }\r\n  }, [])\r\n\r\n  const blockList = [];\r\n  const specialBlockList = [];\r\n\r\n  const handleToggle = block => {\r\n    if (blockValues[block]) {\r\n      setBlockValues({ [block]: 0 });\r\n      if (block === 'Other') setBlockValues({ ['Other-Text']: '' });\r\n      if (noneOptions && (block !== noneOptions['name'])) setNumSelect(numSelect - 1);\r\n    } else {\r\n      setBlockValues({ [block]: 1 });\r\n      if (noneOptions && (block !== noneOptions['name'])) setNumSelect(numSelect + 1);\r\n    }\r\n  }\r\n  const handleOtherText = e => setBlockValues({ ['Other-Text']: e.currentTarget.value});\r\n  const handleSetExclusive = block => {\r\n    setBlockValues({ ['exclusive']: block })\r\n    if (otherOptions && (block !== 'Other')) setBlockValues({ ['Other-Text']: '' });\r\n  };\r\n\r\n  const [blockValues, setBlockValues] = useReducer(\r\n    (curVals, newVals) => ({ ...curVals, ...newVals }), initialState\r\n  );\r\n\r\n  useEffect(() => setFieldValue(fieldName, blockValues), [blockValues]);\r\n\r\n  if (blocks) {\r\n    for (let i = 0; i < blocks.length; i++) {\r\n      if (exclusive) {\r\n        blockList.push(\r\n          <button key={'block' + i}\r\n            className={'block' + (blockValues['exclusive'] === blocks[i] ? ' selected' : '')}\r\n            onClick={() => handleSetExclusive(blocks[i])}>\r\n            {blocks[i]}\r\n          </button>\r\n        )\r\n      } else {\r\n        blockList.push(\r\n          <button key={'block' + i} disabled={noneOptions && blockValues[noneOptions['name']]}\r\n            className={'block' + (blockValues[blocks[i]] ? ' selected' : '') + (noneOptions && blockValues[noneOptions['name']] ? ' disabled' : '')}\r\n            onClick={() => handleToggle(blocks[i])}>\r\n            {blocks[i]}\r\n          </button>\r\n        )\r\n      }\r\n    }\r\n  }\r\n  if (otherOptions) {\r\n    if (exclusive) {\r\n      specialBlockList.push(\r\n        <button key={'sblock-other'}\r\n          className={'block' + (blockValues['exclusive'] === otherOptions['name'] ? ' selected' : '')}\r\n          onClick={() => handleSetExclusive(otherOptions['name'])}>\r\n          {otherOptions['name']}\r\n        </button>\r\n      )\r\n    } else {\r\n      specialBlockList.push(\r\n        <button key={'sblock-other'} disabled={noneOptions && blockValues[noneOptions['name']]}\r\n          className={'block' + (blockValues[otherOptions['name']] ? ' selected' : '') + (noneOptions && blockValues[noneOptions['name']] ? ' disabled' : '')}\r\n          onClick={() => handleToggle(otherOptions['name'])}>\r\n          {otherOptions['name']}\r\n        </button>\r\n      )\r\n    }\r\n  }\r\n  if (noneOptions) {\r\n    if (exclusive) {\r\n      specialBlockList.push(\r\n        <button key={'sblock-none'} className={'block' + (blockValues['exclusive'] === noneOptions['name'] ? ' selected' : '')}\r\n          onClick={() => handleSetExclusive(noneOptions['name'])}>\r\n          {noneOptions['name']}\r\n        </button>\r\n      )\r\n    } else {\r\n      specialBlockList.push(\r\n        <button key={'sblock-none'} className={'block' + (blockValues[noneOptions['name']] ? ' selected' : '') + (numSelect > 0 ? ' disabled' : '')} disabled={numSelect > 0}\r\n          onClick={() => handleToggle(noneOptions['name'])}>\r\n          {noneOptions['name']}\r\n        </button>\r\n      )\r\n    }\r\n  }\r\n\r\n  return <div className={'block-selection-container' + (className ? ' ' + className : '') + (merge ? ' merge' : '')}>\r\n    <div className={'block-wrapper' + (merge ? ' merge' : '')}>\r\n      {blockList}\r\n      {specialBlockList}\r\n    </div>\r\n    {otherOptions && (exclusive ? (blockValues['exclusive'] === otherOptions['name']) : blockValues[otherOptions['name']]) ? <label className='txt-specify w-full'>Please specify:\r\n      <input type='text' name='Other-Text' value={blockValues['Other-Text'] || ''} placeholder={otherOptions['placeholder']}\r\n        onChange={e => handleOtherText(e)} />\r\n    </label> : ''}\r\n  </div>\r\n}\r\n","import React from 'react';\r\n\r\nexport default props => {\r\n  const { fieldName, fieldValue, sliderLabels, setFieldValue, disabled } = props.options;\r\n\r\n  let radioWidth = 'calc((100% - 16px)*' + (1 - 0.25*Math.max(0, fieldValue - 1)) + ')';\r\n\r\n  const handleChange = e => setFieldValue(e);\r\n\r\n  return <div className='radio-container'>\r\n    <div className={'radio-buttons' + (disabled ? ' disabled' : '')}>\r\n      <div className='radio-group gfirst'>\r\n        <span className='radio-label gfirst'>1</span>\r\n        <div className='radio'>\r\n          <input id={fieldName + '-1'} type='radio' name={fieldName} value='1' checked={fieldValue === '1'} disabled={disabled}\r\n            onChange={e => handleChange(e)} />\r\n          <label htmlFor={fieldName + '-1'}></label>\r\n        </div>\r\n      </div>\r\n      <div className='radio-group'>\r\n        <span className='radio-label'>2</span>\r\n        <div className='radio'>\r\n          <input id={fieldName + '-2'} type='radio' name={fieldName} value='2' checked={fieldValue === '2'} disabled={disabled}\r\n            onChange={e => handleChange(e)} />\r\n          <label htmlFor={fieldName + '-2'}></label>\r\n        </div>\r\n      </div>\r\n      <div className='radio-group'>\r\n        <span className='radio-label'>3</span>\r\n        <div className='radio'>\r\n          <input id={fieldName + '-3'} type='radio' name={fieldName} value='3' checked={fieldValue === '3'} disabled={disabled}\r\n            onChange={e => handleChange(e)} />\r\n          <label htmlFor={fieldName + '-3'}></label>\r\n        </div>\r\n      </div>\r\n      <div className='radio-group'>\r\n        <span className='radio-label'>4</span>\r\n        <div className='radio'>\r\n          <input id={fieldName + '-4'} type='radio' name={fieldName} value='4' checked={fieldValue === '4'} disabled={disabled}\r\n            onChange={e => handleChange(e)} />\r\n          <label htmlFor={fieldName + '-4'}></label>\r\n        </div>\r\n      </div>\r\n      <div className='radio-group glast'>\r\n        <span className='radio-label glast'>5</span>\r\n        <div className='radio'>\r\n          <input id={fieldName + '-5'} type='radio' name={fieldName} value='5' checked={fieldValue === '5'} disabled={disabled}\r\n            onChange={e => handleChange(e)} />\r\n          <label htmlFor={fieldName + '-5'}></label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className={'radio-auxiliary' + (disabled ? ' disabled' : '')}>\r\n      <div className='radio-progress'></div>\r\n      <div className='radio-remaining' style={{width: radioWidth}}></div>\r\n      <div className='slider-labels'>\r\n        <span>{sliderLabels[0]}</span>\r\n        <span>{sliderLabels[1]}</span>\r\n        <span>{sliderLabels[2]}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { animateScroll } from 'react-scroll';\r\nimport BlockSelection from '../BlockSelection';\r\nimport Checkbox from '../Checkbox';\r\nimport Radio from '../Radio';\r\n\r\nexport default props => {\r\n  const isTabletorMobile = useMediaQuery({ maxWidth: 767.98 });\r\n  const { setPage, setValues } = props;\r\n  const initialState = props.values;\r\n\r\n  const [surveyValues, setSurveyValues] = useReducer(\r\n    (curVals, newVals) => ({ ...curVals, ...newVals }), initialState\r\n  );\r\n\r\n  const [errors, setErrors] = useState({ subjectsPlanned: 0, subjectsOther: 0, industryInterested: 0, industryInformed: 0, industryInformedExplain: 0, industryExposed: 0 });\r\n  const { subjectsPlanned, subjectsOther, subjectsOtherCheck, industryInterested, industryInformed, industryInformedExplain, industryExposed } = surveyValues;\r\n\r\n  useEffect(() => animateScroll.scrollToTop({ duration: 100 }), []);\r\n  useEffect(() => setValues(surveyValues), [surveyValues]);\r\n\r\n  let industryFormedRemaining = 'calc((100% - 16px)*' + (1 - 0.25*Math.max(0, industryInformed - 1)) + ')';\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setSurveyValues({ [name]: value });\r\n  }\r\n  const handlePrevious = () => setPage(1);\r\n  const handleNext = () => {\r\n    let newErrors = Object.assign({}, errors);\r\n    let isError = false;\r\n\r\n    for (let field in errors) {\r\n      if (\r\n        (((field === 'subjectsPlanned') || (field === 'industryInterested')) && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).includes(1)) || !otherCheck(surveyValues[field])) ||\r\n        ((field === 'subjectsOther') && !surveyValues[field] && !surveyValues['subjectsOtherCheck']) ||\r\n        ((field === 'industryExposed') && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).length > 0)) ||\r\n        ((field !== 'subjectsPlanned') && (field !== 'industryInterested') && (field !== 'subjectsOther') && (field !== 'industryExposed') && !surveyValues[field])\r\n      ) {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 1 });\r\n        isError = true;\r\n      } else {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 0 });\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    if (!isError) setPage(3);\r\n    else animateScroll.scrollToTop({ duration: 100 });\r\n  };\r\n\r\n  const handleSetBlocks = (fieldName, blockValues) => setSurveyValues({ [fieldName]: blockValues });\r\n  const otherCheck = surveyBlockValue => {\r\n    // return true if (Other is NOT selected) or if (Other IS selected and Other-Text IS filled)\r\n    // return false if (Other IS selected and Other-Text is NOT filled)\r\n    if (!((typeof surveyBlockValue === 'object') && (surveyBlockValue !== null))) {\r\n      return true\r\n    }\r\n    let keys = Object.keys(surveyBlockValue);\r\n    if (\r\n      (keys.includes('Other') && surveyBlockValue['Other']) ||\r\n      (keys.includes('exclusive') && (surveyBlockValue['exclusive'] === 'Other'))\r\n    ) {\r\n      return keys.includes('Other-Text') && (surveyBlockValue['Other-Text'] !== '')\r\n    }\r\n    return true\r\n  };\r\n  const handleSetCheckbox = (fieldCheck, checkState) => {\r\n    let fieldName = fieldCheck.slice(0, -5);\r\n    if (checkState) {\r\n      setSurveyValues({ [fieldName]: '' });\r\n      setErrors(Object.assign({}, errors, { [fieldName]: 0 }));\r\n    }\r\n    setSurveyValues({ [fieldCheck]: checkState });\r\n  };\r\n\r\n  const subjectsPlannedOptions = {\r\n    fieldName: 'subjectsPlanned',\r\n    fieldValue: subjectsPlanned,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Business', 'Science', 'Technology', 'Engineering',\r\n      'Math', 'Art', 'Music', 'History',\r\n      'Leadership', 'Literature', 'Education', 'Computer Programming',\r\n      'Marketing', 'Foreign Language', 'Health', 'Design'\r\n    ],\r\n    otherOptions: {\r\n      'name': 'Other',\r\n      'placeholder': 'E.g. Psychology, Performing Arts'\r\n    },\r\n    noneOptions: {\r\n      'name': 'Not Applicable'\r\n    }\r\n  };\r\n  const subjectsOtherCheckOptions = {\r\n    fieldName: 'subjectsOtherCheck',\r\n    fieldValue: subjectsOtherCheck,\r\n    fieldLabel: 'I\\'m currently not enrolled in any classes or instructional programs.',\r\n    setFieldValue: handleSetCheckbox,\r\n  };\r\n  const industryInterestedOptions = {\r\n    fieldName: 'industryInterested',\r\n    fieldValue: industryInterested,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Advertising', 'Banking', 'Medicine', 'Financial Services',\r\n      'Technology', 'Marketing', 'Pharmacy', 'Music',\r\n      'Fashion', 'Biochemical', 'Education', 'Management',\r\n      'Administrative', 'Design', 'Aviation', 'Real Estate'\r\n    ],\r\n    otherOptions: {\r\n      'name': 'Other',\r\n      'placeholder': 'E.g. Psychology, Performing Arts'\r\n    }\r\n  };\r\n  const industryExposedOptions = {\r\n    fieldName: 'industryExposed',\r\n    fieldValue: industryExposed,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Yes', 'No'\r\n    ],\r\n    exclusive: true\r\n  };\r\n  const industryInformedOptions = {\r\n    fieldName: 'industryInformed',\r\n    fieldValue: industryInformed,\r\n    sliderLabels: ['Not confident', 'Somewhat confident', 'Very confident'],\r\n    setFieldValue: handleChange\r\n  };\r\n\r\n  return (\r\n    <div className='learner-page-2-container'>\r\n      <h1>Educational Goals</h1>\r\n      <h3>All fields required unless marked as \"Optional\".</h3>\r\n      <div className='field-container'>\r\n        <Tooltip arrow={true} open={errors['subjectsPlanned'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What subjects are you currently taking or planning on taking?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={subjectsPlannedOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['subjectsOther'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Are you interested in any subjects that are currently not available at your school or academic institution? If yes, please specify.</h2>\r\n            <input className={'w-full' + (subjectsOtherCheck ? ' disabled' : '')}\r\n              disabled={subjectsOtherCheck} type='text' name='subjectsOther' value={subjectsOther || ''} placeholder='E.g. Business, fashion design' onChange={e => handleChange(e)} />\r\n            <Checkbox options={subjectsOtherCheckOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['industryInterested'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What is your industry of interest or what are you interested in doing career-wise?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={industryInterestedOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <div className='question-container'>\r\n          <Tooltip arrow={true} open={errors['industryInformed'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n            <div className='wrapper'>\r\n              <h2>How informed are you about your job, career or industry?</h2>\r\n              <Radio options={industryInformedOptions} />\r\n            </div>\r\n          </Tooltip>\r\n          <Tooltip arrow={true} open={errors['industryInformedExplain'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n            <label className='txt-specify w-full'>Please explain your answer:\r\n              <input type='text' name='industryInformedExplain' value={industryInformedExplain || ''} placeholder={'E.g. I haven\\'t had much guidance; Taking over family business'}\r\n                onChange={e => handleChange(e)} />\r\n            </label>\r\n          </Tooltip>\r\n        </div>\r\n        <Tooltip arrow={true} open={errors['industryExposed'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Have you already been exposed to or are working in your choice of job, career or industry?</h2>\r\n            <BlockSelection options={industryExposedOptions} />\r\n          </div>\r\n        </Tooltip>\r\n      </div>\r\n      <div className='btn-container'>\r\n        <button className='btn-prev' type='button'\r\n          onClick={() => handlePrevious()}>\r\n          Previous\r\n        </button>\r\n        <button className='btn-next' type='button'\r\n          onClick={() => handleNext()}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Slider } from '@material-ui/core';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { animateScroll } from 'react-scroll';\r\nimport BlockSelection from '../BlockSelection';\r\nimport Checkbox from '../Checkbox';\r\nimport Radio from '../Radio';\r\n\r\nexport default props => {\r\n  const isTabletorMobile = useMediaQuery({ maxWidth: 767.98 });\r\n  const { setPage, setValues } = props;\r\n  const initialState = props.values;\r\n\r\n  const [surveyValues, setSurveyValues] = useReducer(\r\n    (curVals, newVals) => ({ ...curVals, ...newVals }), initialState\r\n  );\r\n\r\n  const [errors, setErrors] = useState({ classToBusiness: 0, classToTechnology: 0, collaborateWithPeers: 0, professionalMentorship: 0, collaboratingContact: 0, timeRemote: 0, activitiesEnjoy: 0 });\r\n  const { classToBusiness, classToBusinessCheck, classToTechnology, classToTechnologyCheck, collaborateWithPeers, collaborateWithPeersCheck, professionalMentorship, professionalMentorshipCheck, collaboratingContact, timeRemote, timeRemoteCheck, activitiesEnjoy } = surveyValues;\r\n\r\n  useEffect(() => animateScroll.scrollToTop({ duration: 100 }), []);\r\n  useEffect(() => setValues(surveyValues), [surveyValues]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setSurveyValues({ [name]: value })\r\n  };\r\n  const handlePrevious = () => setPage(2);\r\n  const handleNext = () => {\r\n    let newErrors = Object.assign({}, errors);\r\n    let isError = false;\r\n\r\n    for (let field in errors) {\r\n      if (\r\n        ((field === 'classToBusiness') && !surveyValues[field] && !surveyValues['classToBusinessCheck']) ||\r\n        ((field === 'classToTechnology') && !surveyValues[field] && !surveyValues['classToTechnologyCheck']) ||\r\n        ((field === 'collaborateWithPeers') && !surveyValues[field] && !surveyValues['collaborateWithPeersCheck']) ||\r\n        ((field === 'professionalMentorship') && !surveyValues[field] && !surveyValues['professionalMentorshipCheck']) ||\r\n        ((field === 'collaboratingContact') && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).length > 0)) ||\r\n        ((field === 'timeRemote') && !surveyValues[field] && !surveyValues['timeRemoteCheck']) ||\r\n        ((field === 'activitiesEnjoy') && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).includes(1)) || !otherCheck(surveyValues[field])) ||\r\n        ((field !== 'classToBusiness') && (field !== 'classToTechnology') && (field !== 'collaborateWithPeers') && (field !== 'professionalMentorship') && (field !== 'collaboratingContact') && (field !== 'timeRemote') && (field !== 'activitiesEnjoy') && !surveyValues[field])\r\n      ) {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 1 });\r\n        isError = true;\r\n      } else {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 0 });\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    if (!isError) setPage(4);\r\n    else animateScroll.scrollToTop({ duration: 100 });\r\n  };\r\n\r\n  const handleSetBlocks = (fieldName, blockValues) => setSurveyValues({ [fieldName]: blockValues });\r\n  const otherCheck = surveyBlockValue => {\r\n    // return true if (Other is NOT selected) or if (Other IS selected and Other-Text IS filled)\r\n    // return false if (Other IS selected and Other-Text is NOT filled)\r\n    if (!((typeof surveyBlockValue === 'object') && (surveyBlockValue !== null))) {\r\n      return true\r\n    }\r\n    let keys = Object.keys(surveyBlockValue);\r\n    if (\r\n      (keys.includes('Other') && surveyBlockValue['Other']) ||\r\n      (keys.includes('exclusive') && (surveyBlockValue['exclusive'] === 'Other'))\r\n    ) {\r\n      return keys.includes('Other-Text') && (surveyBlockValue['Other-Text'] !== '')\r\n    }\r\n    return true\r\n  };\r\n  const handleSetCheckbox = (fieldCheck, checkState) => {\r\n    let fieldName = fieldCheck.slice(0, -5);\r\n    if (checkState) {\r\n      setSurveyValues({ [fieldName]: '' });\r\n      setErrors(Object.assign({}, errors, { [fieldName]: 0 }));\r\n    }\r\n    setSurveyValues({ [fieldCheck]: checkState });\r\n  };\r\n\r\n  const classToBusinessOptions = {\r\n    fieldName: 'classToBusiness',\r\n    fieldValue: classToBusiness,\r\n    sliderLabels: ['Not related', 'Somewhat related', 'Strongly related'],\r\n    setFieldValue: handleChange,\r\n    disabled: classToBusinessCheck\r\n  };\r\n  const classToBusinessCheckOptions = {\r\n    fieldName: 'classToBusinessCheck',\r\n    fieldValue: classToBusinessCheck,\r\n    fieldLabel: 'I\\'m currently not enrolled in any classes or instructional programs.',\r\n    setFieldValue: handleSetCheckbox,\r\n  };\r\n  const classToTechnologyOptions = {\r\n    fieldName: 'classToTechnology',\r\n    fieldValue: classToTechnology,\r\n    sliderLabels: ['Not related', 'Somewhat related', 'Strongly related'],\r\n    setFieldValue: handleChange,\r\n    disabled: classToTechnologyCheck\r\n  };\r\n  const classToTechnologyCheckOptions = {\r\n    fieldName: 'classToTechnologyCheck',\r\n    fieldValue: classToTechnologyCheck,\r\n    fieldLabel: 'I\\'m currently not enrolled in any classes or instructional programs.',\r\n    setFieldValue: handleSetCheckbox,\r\n  };\r\n  const collaborateWithPeersOptions = {\r\n    fieldName: 'collaborateWithPeers',\r\n    fieldValue: collaborateWithPeers,\r\n    sliderLabels: ['Rarely', 'Sometimes', 'Frequently'],\r\n    setFieldValue: handleChange,\r\n    disabled: collaborateWithPeersCheck\r\n  };\r\n  const collaborateWithPeersCheckOptions = {\r\n    fieldName: 'collaborateWithPeersCheck',\r\n    fieldValue: collaborateWithPeersCheck,\r\n    fieldLabel: 'I do not currently collaborate with anyone.',\r\n    setFieldValue: handleSetCheckbox,\r\n  };\r\n  const professionalMentorshipOptions = {\r\n    fieldName: 'professionalMentorship',\r\n    fieldValue: professionalMentorship,\r\n    sliderLabels: ['Rarely', 'Sometimes', 'Frequently'],\r\n    setFieldValue: handleChange,\r\n    disabled: professionalMentorshipCheck\r\n  };\r\n  const professionalMentorshipCheckOptions = {\r\n    fieldName: 'professionalMentorshipCheck',\r\n    fieldValue: professionalMentorshipCheck,\r\n    fieldLabel: 'I do not currently have a mentor.',\r\n    setFieldValue: handleSetCheckbox,\r\n  };\r\n  const collaboratingContactOptions = {\r\n    fieldName: 'collaboratingContact',\r\n    fieldValue: collaboratingContact,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Face-to-face', 'Online', 'Both/Hybrid'\r\n    ],\r\n    exclusive: true,\r\n    noneOptions: {\r\n      'name': 'None'\r\n    }\r\n  };\r\n  const timeRemoteOptions = {\r\n    max: 100,\r\n    min: 1,\r\n    onChange: (e, val) => setSurveyValues({ ['timeRemote']: val }),\r\n    value: timeRemote || 1,\r\n    valueLabelDisplay: 'on',\r\n    valueLabelFormat: num => num + '%',\r\n  };\r\n  const timeRemoteCheckOptions = {\r\n    fieldName: 'timeRemoteCheck',\r\n    fieldValue: timeRemoteCheck,\r\n    fieldLabel: 'I do not work online.',\r\n    setFieldValue: handleSetCheckbox,\r\n  };\r\n  const activitiesEnjoyOptions = {\r\n    fieldName: 'activitiesEnjoy',\r\n    fieldValue: activitiesEnjoy,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Interactive', 'Project-Based', 'Lecture',\r\n      'Panel Discussions', 'Presentations', 'Independent Assignments'\r\n    ],\r\n    otherOptions: {\r\n      'name': 'Other',\r\n      'placeholder': ''\r\n    }\r\n  };\r\n\r\n  const sliderLabelEndStyle = () =>\r\n    timeRemote >= (isTabletorMobile ? 96 : 98) ? {'color': 'transparent', 'user-select': 'none'} : {};\r\n\r\n  return (\r\n    <div className='learner-page-3-container'>\r\n      <h1>Business and Technology</h1>\r\n      <h3>All fields required unless marked as \"Optional\".</h3>\r\n      <div className='field-container'>\r\n        <Tooltip arrow={true} open={errors['classToBusiness'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>How much are your classes related to business?</h2>\r\n            <h3 className='txt-clarify'>E.g. Standard business practices, business plans, pitch presentations, market research, data analysis, surveys, etc.</h3>\r\n            <Radio options={classToBusinessOptions} />\r\n            <Checkbox options={classToBusinessCheckOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['classToTechnology'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>How much are your classes related to technology?</h2>\r\n            <h3 className='txt-clarify'>E.g. Coding, app development, technology platforms, digital marketing, fashion 3D printing, etc</h3>\r\n            <Radio options={classToTechnologyOptions} />\r\n            <Checkbox options={classToTechnologyCheckOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['collaborateWithPeers'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>How often do you collaborate with your peers on assignments or projects?</h2>\r\n            <h3 className='txt-clarify'>E.g. Online or in-person</h3>\r\n            <Radio options={collaborateWithPeersOptions} />\r\n            <Checkbox options={collaborateWithPeersCheckOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['professionalMentorship'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>How often have you had an industry professional mentor you?</h2>\r\n            <h3 className='txt-clarify'>E.g. Industry veterans, specific domain experts, entrepreneurs, etc.</h3>\r\n            <Radio options={professionalMentorshipOptions} />\r\n            <Checkbox options={professionalMentorshipCheckOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['collaboratingContact'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Which do you prefer when learning or collaborating with others?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={collaboratingContactOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <div className='question-container'>\r\n          <h2>How much time do you spend working online/remotely?</h2>\r\n          <div className={'wrapper' + (timeRemoteCheck ? ' disabled' : '')}>\r\n            <div className='slider-value-labels'>\r\n              <span>1%</span>\r\n              <span style={sliderLabelEndStyle()}>100%</span>\r\n            </div>\r\n            <Slider max={timeRemoteOptions['max']} min={timeRemoteOptions['min']}\r\n              onChange={timeRemoteOptions['onChange']}\r\n              value={timeRemoteOptions['value'] || 1}\r\n              valueLabelDisplay={timeRemoteOptions['valueLabelDisplay']}\r\n              valueLabelFormat={timeRemoteOptions['valueLabelFormat']}\r\n              disabled={timeRemoteCheck ? true : false} />\r\n            <div className='slider-labels'>\r\n              <span>Almost never</span>\r\n              <span>Somewhat frequently</span>\r\n              <span>Fully online</span>\r\n            </div>\r\n          </div>\r\n          <Checkbox options={timeRemoteCheckOptions} />\r\n        </div>\r\n        <Tooltip arrow={true} open={errors['activitiesEnjoy'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What kinds of activities do you like most?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={activitiesEnjoyOptions} />\r\n          </div>\r\n        </Tooltip>\r\n      </div>\r\n      <div className='btn-container'>\r\n        <button className='btn-prev' type='button'\r\n          onClick={() => handlePrevious()}>\r\n          Previous\r\n        </button>\r\n        <button className='btn-next' type='button'\r\n          onClick={() => handleNext()}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { animateScroll } from 'react-scroll';\r\nimport BlockSelection from '../BlockSelection';\r\nimport Checkbox from '../Checkbox';\r\n\r\nexport default props => {\r\n  const isTabletorMobile = useMediaQuery({ maxWidth: 767.98 });\r\n  const { setSurvey, setPage, setLogo, setValues } = props;\r\n  const initialState = props.values;\r\n\r\n  const [surveyValues, setSurveyValues] = useReducer(\r\n    (curVals, newVals) => ({ ...curVals, ...newVals }), initialState\r\n  );\r\n\r\n  const [errors, setErrors] = useState({ interestAttend: 0, attendMeetPref: 0, attendTimePref: 0, participateFrequency: 0, interestTIV: 0 });\r\n  const { interestAttend, attendMeetPref, attendTimePref, participateFrequency, additionalComments, charRemain, interestTIV, interestTIVCheck } = surveyValues;\r\n\r\n  useEffect(() => animateScroll.scrollToTop({ duration: 100 }), []);\r\n  useEffect(() => setValues(surveyValues), [surveyValues]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setSurveyValues({ [name]: value })\r\n  };\r\n  const handlePrevious = () => setPage(3);\r\n  const handleSubmit = () => {\r\n    let newErrors = Object.assign({}, errors);\r\n    let isError = false;\r\n\r\n    for (let field in errors) {\r\n      if (\r\n        (((field === 'interestAttend') || (field === 'attendMeetPref') || (field === 'interestTIV')) && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).length > 0)) ||\r\n        (((field === 'attendTimePref') || (field === 'participateFrequency')) && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).includes(1))) ||\r\n        ((field !== 'interestAttend') && (field !== 'attendMeetPref') && (field !== 'attendTimePref') && (field !== 'participateFrequency') && (field !== 'interestTIV') && !surveyValues[field])\r\n      ) {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 1 });\r\n        isError = true;\r\n      } else {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 0 });\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    if (!isError) {\r\n      props.submit();\r\n      setLogo('img/logo_only.png');\r\n      setSurvey('thanks');\r\n    }\r\n    else animateScroll.scrollToTop({ duration: 100 });\r\n  };\r\n\r\n  const handleSetBlocks = (fieldName, blockValues) => setSurveyValues({ [fieldName]: blockValues });\r\n  const handleTextArea = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setSurveyValues({ ['additionalComments']: value })\r\n    setSurveyValues({ ['charRemain']: 400 - value.length })\r\n  };\r\n  const handleSetCheckbox = (fieldCheck, checkState) => setSurveyValues({ [fieldCheck]: checkState })\r\n  const handleSetCheckboxDisabler = (fieldCheck, checkState) => {\r\n    let fieldName = fieldCheck.slice(0, -5);\r\n    if (checkState) {\r\n      setSurveyValues({ [fieldName]: '' });\r\n      setErrors(Object.assign({}, errors, { [fieldName]: 0 }));\r\n    }\r\n    setSurveyValues({ [fieldCheck]: checkState });\r\n  };\r\n\r\n  const interestAttendOptions = {\r\n    className: 'interest-attend',\r\n    fieldName: 'interestAttend',\r\n    fieldValue: interestAttend,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Yes', 'No', 'I already attend instructional programs'\r\n    ],\r\n    exclusive: true\r\n  };\r\n  const attendMeetPrefOptions = {\r\n    fieldName: 'attendMeetPref',\r\n    fieldValue: attendMeetPref,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Face-to-face', 'Online', 'Both/Hybrid'\r\n    ],\r\n    exclusive: true\r\n  };\r\n  const attendTimePrefOptions = {\r\n    fieldName: 'attendTimePref',\r\n    fieldValue: attendTimePref,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'School Hours', 'Afterschool', 'Weekends', 'Summer Semester'\r\n    ],\r\n    noneOptions: {\r\n      'name': 'None'\r\n    }\r\n  };\r\n  const participateFrequencyOptions = {\r\n    fieldName: 'participateFrequency',\r\n    fieldValue: participateFrequency,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Daily', 'Weekly', 'Monthly'\r\n    ],\r\n    noneOptions: {\r\n      'name': 'None'\r\n    }\r\n  };\r\n  const interestTIVOptions = {\r\n    fieldName: 'interestTIV',\r\n    fieldValue: interestTIV,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Yes', 'No'\r\n    ],\r\n    exclusive: true\r\n  };\r\n  const interestTIVCheckOptions = {\r\n    className: 'interest-tiv-check',\r\n    fieldName: 'interestTIVCheck',\r\n    fieldValue: interestTIVCheck,\r\n    fieldLabel: 'I would like to receive updates regarding TIV.',\r\n    setFieldValue: handleSetCheckbox,\r\n  };\r\n\r\n  return (\r\n    <div className='learner-page-4-container'>\r\n      <h1>Programs</h1>\r\n      <h3>All fields required unless marked as \"Optional\".</h3>\r\n      <div className='field-container'>\r\n        <Tooltip arrow={true} open={errors['interestAttend'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Are you interested in or would you be willing to attend instructional programs outside of your typical school schedule to enhance your educational or career opportunities?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={interestAttendOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['attendMeetPref'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Which would you prefer when attending these instructional programs?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={attendMeetPrefOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['attendTimePref'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What times would you prefer when attending these programs?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={attendTimePrefOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['participateFrequency'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>How often would you prefer to participate in these programs?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={participateFrequencyOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <div className='question-container'>\r\n          <h2>Is there anything else about you would like to have access to or participate in regarding your education or professional development?</h2>\r\n          <div className='textarea-container'>\r\n            <textarea maxLength='400' name='additionalComments' wrap='soft' rows='5' value={additionalComments} onChange={e => handleTextArea(e)} />\r\n            <span className='char-remain'>{charRemain}</span>\r\n          </div>\r\n        </div>\r\n        <Tooltip arrow={true} open={errors['interestTIV'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Would you be interested in learning more about TIV and how our company can help make an impact?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={interestTIVOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <div className='question-container'>\r\n          <Checkbox options={interestTIVCheckOptions} />\r\n        </div>\r\n      </div>\r\n      <div className='btn-container'>\r\n        <button className='btn-prev' type='button'\r\n          onClick={() => handlePrevious()}>\r\n          Previous\r\n        </button>\r\n        <button className='btn-submit' type='button'\r\n          onClick={() => handleSubmit()}>\r\n          SUBMIT\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport default props => {\r\n  const { survey, page } = props\r\n  let progress = {};\r\n\r\n  const currentCheck = nodeNum => page === nodeNum ? ' current' : '';\r\n  const completeCheck = nodeNum => page > nodeNum ? ' complete' : '';\r\n\r\n  if (survey === 'learner/student') {\r\n    progress = {\r\n      1: 'Basic info',\r\n      2: 'Education',\r\n      3: 'Business and Technology',\r\n      4: 'Programs'\r\n    }\r\n  } else if (survey === 'professional') {\r\n    progress = {\r\n      1: 'Basic Info',\r\n      2: 'Professional Info',\r\n      3: 'Volunteering'\r\n    }\r\n  } else if (survey === 'organization/academic institution') {\r\n    progress = {\r\n      1: 'Basic Info',\r\n      2: 'Institution Info',\r\n      3: 'Partnership'\r\n    }\r\n  } else if (survey === 'corporation') {\r\n    progress = {\r\n      1: 'Basic Info',\r\n      2: 'Developing Talent',\r\n      3: 'Resources'\r\n    }\r\n  }\r\n\r\n  let progWidth = 'calc((100%)*' + (1 - (survey === 'learner/student' ? 0.3333 : 0.5)*Math.max(0, page - 1)) + ')';\r\n\r\n  return <div className={'progress-bar-container' + (survey === 'learner/student' ? ' prog-4' : ' prog-3')}>\r\n    <div className='node-container'>\r\n      <div className='node-wrapper'>\r\n        <div className={'circle-outer c1'  + currentCheck(1) + completeCheck(1)}>\r\n          <div className='circle-inner'>\r\n            {page > 1 ? <i className='fas fa-check' /> : 1}\r\n          </div>\r\n        </div>\r\n        <span className='descriptor'>{progress[1]}</span>\r\n      </div>\r\n      <div className='node-wrapper'>\r\n        <div className={'circle-outer c2' + currentCheck(2) + completeCheck(2)}>\r\n          <div className='circle-inner'>\r\n            {page > 2 ? <i className='fas fa-check' /> : 2}\r\n          </div>\r\n        </div>\r\n        <span className='descriptor'>{progress[2]}</span>\r\n      </div>\r\n      <div className='node-wrapper'>\r\n        <div className={'circle-outer c3' + currentCheck(3) + completeCheck(3)}>\r\n          <div className='circle-inner'>\r\n            {page > 3 ? <i className='fas fa-check' /> : 3}\r\n          </div>\r\n        </div>\r\n        <span className='descriptor'>{progress[3]}</span>\r\n      </div>\r\n      {survey === 'learner/student' ? <div className='node-wrapper'>\r\n        <div className={'circle-outer c4' + currentCheck(4) + completeCheck(4)}>\r\n          <div className='circle-inner'>\r\n            {page > 4 ? <i className='fas fa-check' /> : 4}\r\n          </div>\r\n        </div>\r\n        <span className='descriptor'>{progress[4]}</span>\r\n      </div> : ''}\r\n    </div>\r\n    <div className='progress-auxiliary'>\r\n      <div className='progress'></div>\r\n      <div className='remaining' style={{width: progWidth}}></div>\r\n    </div>\r\n  </div>\r\n}\r\n","import React, { useState } from 'react';\r\nimport $ from 'jquery';\r\nimport Page1 from './Page1';\r\nimport Page2 from './Page2';\r\nimport Page3 from './Page3';\r\nimport Page4 from './Page4';\r\nimport ProgressBar from '../ProgressBar';\r\nimport {} from './learner.scss';\r\n\r\nexport default props => {\r\n  const { setSurvey, setLogo } = props;\r\n  const [page, setPage] = useState(1);\r\n  const [values1, setValues1] = useState({});\r\n  const [values2, setValues2] = useState({});\r\n  const [values3, setValues3] = useState({});\r\n  const [values4, setValues4] = useState({});\r\n\r\n  const submit = () => {\r\n    const data = {\r\n      'Name': values1['name'],\r\n      'Email': values1['email'],\r\n      'City': values1['city'],\r\n      'State': values1['state'],\r\n      'Age': values1['age'],\r\n      'Gender (Optional)': values1['gender'],\r\n      'Ethnicity (Optional)': values1['ethnicity'],\r\n      'School or Academic Institution': (values1['schoolCheck'] ? 'I\\'m not in school or part of an academic institution' : values1['school']),\r\n      'Education Level': values1['educationLevel'],\r\n\r\n      'What subjects are you currently taking or planning on taking?': stringifyBlock(values2['subjectsPlanned']),\r\n      'Are you interested in any subjects that are currently not available at your school or academic institution? If yes, please specify.': (values2['subjectsOtherCheck'] ? 'I\\'m currently not enrolled in any classes or instructional programs.' : values2['subjectsOther']),\r\n      'What is your industry of interest or what are you interested in doing career-wise?': stringifyBlock(values2['industryInterested']),\r\n      'How informed are you about your job, career or industry?': values2['industryInformed'] + ': ' + values2['industryInformedExplain'],\r\n      'Have you already been exposed to or are working in your choice of job, career or industry?': stringifyBlock(values2['industryExposed']),\r\n\r\n      'How much are your classes related to business?': (values3['classToBusinessCheck'] ? 'I\\'m currently not enrolled in any classes or instructional programs.' : values3['classToBusiness']),\r\n      'How much are your classes related to technology?': (values3['classToTechnologyCheck'] ? 'I\\'m currently not enrolled in any classes or instructional programs.' : values3['classToTechnology']),\r\n      'How often do you collaborate with your peers on assignments or projects?': (values3['collaborateWithPeersCheck'] ? 'I do not currently collaborate with anyone.' : values3['collaborateWithPeers']),\r\n      'How often have you had an industry professional mentor you?': (values3['professionalMentorshipCheck'] ? 'I do not currently have a mentor.' : values3['professionalMentorship']),\r\n      'Which do you prefer when learning or collaborating with others?': stringifyBlock(values3['collaboratingContact']),\r\n      'How much time do you spend working online/remotely?': (values3['timeRemoteCheck'] ? 'I do not work online.' : values3['timeRemote']),\r\n      'What kinds of activities do you like most?': stringifyBlock(values3['activitiesEnjoy']),\r\n\r\n      'Are you interested in or would you be willing to attend instructional programs outside of your typical school schedule to enhance your educational or career opportunities?': stringifyBlock(values4['interestAttend']),\r\n      'Which would you prefer when attending these instructional programs?': stringifyBlock(values4['attendMeetPref']),\r\n      'What times would you prefer when attending these programs?': stringifyBlock(values4['attendTimePref']),\r\n      'How often would you prefer to participate in these programs?': stringifyBlock(values4['participateFrequency']),\r\n      'Is there anything else about you would like to have access to or participate in regarding your education or professional development?': values4['additionalComments'],\r\n      'Would you be interested in learning more about TIV and how our company can help make an impact?': stringifyBlock(values4['interestTIV']),\r\n      'I would like to receive updates regarding TIV.': (values4['interestTIVCheck'] ? 'True' : 'False')\r\n    }\r\n\r\n    $.ajax({\r\n      url: process.env.REACT_APP_LEARNER_SURVEY_URL,\r\n      method: 'GET',\r\n      dataType: 'json',\r\n      data: data\r\n    })\r\n  };\r\n\r\n  const stringifyBlock = blockData => {\r\n    if (!blockData) return '';\r\n    let labels = Object.keys(blockData);\r\n    let stringOutput = '';\r\n\r\n    if (labels.includes('exclusive')) {\r\n      stringOutput += blockData['exclusive'];\r\n      if (labels.includes('Other-Text') && blockData['Other-Text']) stringOutput += ': ' + blockData['Other-Text'];\r\n    } else {\r\n      for (let label in blockData) {\r\n        if (blockData[label] === 1) {\r\n          stringOutput += (stringOutput ? ', ' : '') + label;\r\n          if (label === 'Other') stringOutput += ': ' + blockData['Other-Text'];\r\n        }\r\n      }\r\n    }\r\n\r\n    return stringOutput;\r\n  };\r\n\r\n  return <>\r\n    <ProgressBar survey='learner/student' page={page} />\r\n    {page === 1 ? <Page1 setSurvey={setSurvey} setPage={setPage} values={values1} setValues={setValues1} /> : ''}\r\n    {page === 2 ? <Page2 setPage={setPage} values={values2} setValues={setValues2} /> : ''}\r\n    {page === 3 ? <Page3 setPage={setPage} values={values3} setValues={setValues3} /> : ''}\r\n    {page === 4 ? <Page4 setSurvey={setSurvey} setPage={setPage} setLogo={setLogo} values={values4} setValues={setValues4} submit={submit} /> : ''}\r\n  </>\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { animateScroll } from 'react-scroll';\r\n\r\nexport default props => {\r\n  const { setSurvey, setPage, setValues } = props;\r\n  const initialState = props.values;\r\n\r\n  const [surveyValues, setSurveyValues] = useReducer(\r\n    (curVals, newVals) => ({ ...curVals, ...newVals }), initialState\r\n  )\r\n  const [errors, setErrors] = useState({ name: 0, email: 0, phone: 0, city: 0, state: 0, age: 0 })\r\n  const { name, email, phone, city, state, age, gender, ethnicity } = surveyValues;\r\n\r\n  useEffect(() => animateScroll.scrollToTop({ duration: 100 }), []);\r\n  useEffect(() => setValues(surveyValues), [surveyValues]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setSurveyValues({ [name]: value });\r\n  };\r\n  const handlePrevious = () => setSurvey('Landing');\r\n  const handleNext = () => {\r\n    let newErrors = Object.assign({}, errors);\r\n    let isError = false;\r\n\r\n    for (let field in errors) {\r\n      if (\r\n        ((field === 'age') && (!surveyValues[field] || (surveyValues[field] < 1 || surveyValues[field] > 100))) ||\r\n        ((field !== 'age') && !surveyValues[field])\r\n      ) {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 1 });\r\n        isError = true;\r\n      } else {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 0 });\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    if (!isError) setPage(2);\r\n    else animateScroll.scrollToTop({ duration: 100 });\r\n  };\r\n\r\n  const handleSelect = (opt, field) => setSurveyValues({ [field]: opt['value'] });\r\n\r\n  const stateOptions = [\r\n    {value: 'Alabama', label: 'Alabama'}, {value: 'Alaska', label: 'Alaska'}, {value: 'Arizona', label: 'Arizona'}, {value: 'Arkansas', label: 'Arkansas'}, {value: 'California', label: 'California'},\r\n    {value: 'Colorado', label: 'Colorado'}, {value: 'Connecticut', label: 'Connecticut'}, {value: 'Delaware', label: 'Delaware'}, {value: 'Florida', label: 'Florida'}, {value: 'Georgia', label: 'Georgia'},\r\n    {value: 'Hawaii', label: 'Hawaii'}, {value: 'Idaho', label: 'Idaho'}, {value: 'Illinois', label: 'Illinois'}, {value: 'Indiana', label: 'Indiana'}, {value: 'Iowa', label: 'Iowa'},\r\n    {value: 'Kansas', label: 'Kansas'}, {value: 'Kentucky', label: 'Kentucky'}, {value: 'Louisiana', label: 'Louisiana'}, {value: 'Maine', label: 'Maine'}, {value: 'Maryland', label: 'Maryland'},\r\n    {value: 'Massachusetts', label: 'Massachusetts'}, {value: 'Michigan', label: 'Michigan'}, {value: 'Minnesota', label: 'Minnesota'}, {value: 'Mississippi', label: 'Mississippi'}, {value: 'Missouri', label: 'Missouri'},\r\n    {value: 'Montana', label: 'Montana'}, {value: 'Nebraska', label: 'Nebraska'}, {value: 'Nevada', label: 'Nevada'}, {value: 'New Hampshire', label: 'New Hampshire'}, {value: 'New Jersey', label: 'New Jersey'},\r\n    {value: 'New Mexico', label: 'New Mexico'}, {value: 'New York', label: 'New York'}, {value: 'North Carolina', label: 'North Carolina'}, {value: 'North Dakota', label: 'North Dakota'}, {value: 'Ohio', label: 'Ohio'},\r\n    {value: 'Oklahoma', label: 'Oklahoma'}, {value: 'Oregon', label: 'Oregon'}, {value: 'Pennsylvania', label: 'Pennsylvania'}, {value: 'Rhode Island', label: 'Rhode Island'}, {value: 'South Carolina', label: 'South Carolina'},\r\n    {value: 'South Dakota', label: 'South Dakota'}, {value: 'Tennessee', label: 'Tennessee'}, {value: 'Texas', label: 'Texas'}, {value: 'Utah', label: 'Utah'}, {value: 'Vermont', label: 'Vermont'},\r\n    {value: 'Virginia', label: 'Virginia'}, {value: 'Washington', label: 'Washington'}, {value: 'West Virginia', label: 'West Virginia'}, {value: 'Wisconsin', label: 'Wisconsin'}, {value: 'Wyoming', label: 'Wyoming'}\r\n  ];\r\n  const genderOptions = [\r\n    {value: 'Female', label: 'Female'}, {value: 'Male', label: 'Male'},\r\n    {value: 'Non-binary', label: 'Non-binary'}, {value: 'Transgender', label: 'Transgender'},\r\n    {value: 'Intersex', label: 'Intersex'}, {value: 'I prefer not to say', label: 'I prefer not to say'}\r\n  ];\r\n  const ethnicityOptions = [\r\n    {value: 'Asian or Pacific Islander', label: 'Asian or Pacific Islander'},\r\n    {value: 'Black or African American', label: 'Black or African American'},\r\n    {value: 'Hispanic or Latino', label: 'Hispanic or Latino'},\r\n    {value: 'Native American or Alaskan Native', label: 'Native American or Alaskan Native'},\r\n    {value: 'White or Caucasian', label: 'White or Caucasian'},\r\n    {value: 'Multiracial or Biracial', label: 'Multiracial or Biracial'},\r\n    {value: 'A race/ethnicity not listed here', label: 'A race/ethnicity not listed here'}\r\n  ];\r\n\r\n  return (\r\n    <div className='professional-page-1-container'>\r\n      <h1>Tell us about yourself</h1>\r\n      <h2>Basic information</h2>\r\n      <h3>All fields required unless marked as \"Optional\".</h3>\r\n      <div className='field-container'>\r\n        <Tooltip arrow={true} open={errors['name'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Name\r\n            <input type='text' name='name' value={name || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['email'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Email\r\n            <input className={errors['email'] ? 'error' : ''} type='text' name='email' value={email || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['phone'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Phone Number\r\n            <input className={errors['phone'] ? 'error' : ''} type='text' name='phone' value={phone || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['city'] ? true : false} placement='top-start' title='Required'>\r\n          <label>City\r\n            <input className={errors['city'] ? 'error' : ''} type='text' name='city' value={city || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['state'] ? true : false} placement='top-start' title='Required'>\r\n          <label>State\r\n            <Select className='select-container' classNamePrefix='react-select'\r\n              options={stateOptions}\r\n              placeholder='Please Select' value={state ? { value: state, label: state } : ''}\r\n              onChange={opt => handleSelect(opt, 'state')}/>\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['age'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Age\r\n            <input className={errors['age'] ? 'error' : ''} type='number' min='1' max='100' name='age' value={age || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <label>Gender (Optional)\r\n          <Select className='select-container' classNamePrefix='react-select'\r\n            options={genderOptions}\r\n            placeholder='Please Select' value={gender ? { value: gender, label: gender } : ''}\r\n            onChange={opt => handleSelect(opt, 'gender')}/>\r\n        </label>\r\n        <label>Ethnicity (Optional)\r\n          <Select className='select-container' classNamePrefix='react-select'\r\n            options={ethnicityOptions}\r\n            placeholder='Please Select' value={ethnicity ? { value: ethnicity, label: ethnicity } : ''}\r\n            onChange={opt => handleSelect(opt, 'ethnicity')}/>\r\n        </label>\r\n      </div>\r\n      <div className='btn-container'>\r\n        <button className='btn-prev' type='button'\r\n          onClick={() => handlePrevious()}>\r\n          Previous\r\n        </button>\r\n        <button className='btn-next' type='button'\r\n          onClick={() => handleNext()}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { animateScroll } from 'react-scroll';\r\nimport BlockSelection from '../BlockSelection';\r\n\r\nexport default props => {\r\n  const isTabletorMobile = useMediaQuery({ maxWidth: 767.98 });\r\n  const { setPage, setValues } = props;\r\n  const initialState = props.values;\r\n\r\n  const [surveyValues, setSurveyValues] = useReducer(\r\n    (curVals, newVals) => ({ ...curVals, ...newVals }), initialState\r\n  );\r\n\r\n  const [errors, setErrors] = useState({ industryWork: 0, yourProfession: 0, professionalUrl: 0, areasExpertise: 0, volunteer: 0, volunteerLevel: 0, volunteerFrequency: 0 })\r\n  const { industryWork, yourProfession, professionalUrl, areasExpertise, volunteer, volunteerLevel, volunteerFrequencyAmount, volunteerFrequencyTime } = surveyValues;\r\n\r\n  useEffect(() => animateScroll.scrollToTop({ duration: 100 }), []);\r\n  useEffect(() => setValues(surveyValues), [surveyValues]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setSurveyValues({ [name]: value });\r\n  };\r\n  const handlePrevious = () => setPage(1);\r\n  const handleNext = () => {\r\n    let newErrors = Object.assign({}, errors);\r\n    let isError = false;\r\n\r\n    for (let field in errors) {\r\n      if (\r\n        (\r\n          (field === 'industryWork') &&\r\n          ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) &&\r\n          (Object.values(surveyValues[field]).reduce((accumulator, currentValue) => parseInt(accumulator) + (parseInt(currentValue) || 0), 0) > 3) ||\r\n          ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null) && !otherCheck(surveyValues[field]))\r\n        ) ||\r\n        ((field === 'volunteer') && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).length > 0)) ||\r\n        (\r\n          (field === 'volunteerLevel') &&\r\n          ((typeof surveyValues['volunteer'] === 'object') && (surveyValues['volunteer'] !== null)) &&\r\n          Object.values(surveyValues['volunteer'])[0] === 'Yes' &&\r\n          !Object.values(surveyValues[field]).includes(1)\r\n        ) ||\r\n        (\r\n          (field === 'volunteerFrequency') &&\r\n          ((typeof surveyValues['volunteer'] === 'object') && (surveyValues['volunteer'] !== null)) &&\r\n          Object.values(surveyValues['volunteer'])[0] === 'Yes' &&\r\n          (!surveyValues['volunteerFrequencyAmount'] || !Object.values(surveyValues['volunteerFrequencyTime']).length > 0)\r\n        ) ||\r\n        ((field !== 'industryWork') && (field !== 'subjectsPlanned') && (field !== 'industryInterested') && (field !== 'subjectsOther') && (field !== 'industryExposed') && (field !== 'volunteer') && (field !== 'volunteerLevel') && (field !== 'volunteerFrequency') && !surveyValues[field])\r\n      ) {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 1 });\r\n        isError = true;\r\n      } else {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 0 });\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    if (!isError) setPage(3);\r\n    else animateScroll.scrollToTop({ duration: 100 });\r\n  };\r\n\r\n  const handleSetBlocks = (fieldName, blockValues) => setSurveyValues({ [fieldName]: blockValues });\r\n  const otherCheck = surveyBlockValue => {\r\n    // return true if (Other is NOT selected) or if (Other IS selected and Other-Text IS filled)\r\n    // return false if (Other IS selected and Other-Text is NOT filled)\r\n    if (!((typeof surveyBlockValue === 'object') && (surveyBlockValue !== null))) {\r\n      return true\r\n    }\r\n    let keys = Object.keys(surveyBlockValue);\r\n    if (\r\n      (keys.includes('Other') && surveyBlockValue['Other']) ||\r\n      (keys.includes('exclusive') && (surveyBlockValue['exclusive'] === 'Other'))\r\n    ) {\r\n      return keys.includes('Other-Text') && (surveyBlockValue['Other-Text'] !== '')\r\n    }\r\n    return true\r\n  };\r\n\r\n  const industryWorkOptions = {\r\n    fieldName: 'industryWork',\r\n    fieldValue: industryWork,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Business', 'Science', 'Technology', 'Engineering',\r\n      'Math', 'Art', 'Music', 'History',\r\n      'Leadership', 'Literature', 'Education', 'Computer Programming',\r\n      'Marketing', 'Foreign Language', 'Health', 'Design'\r\n    ],\r\n    otherOptions: {\r\n      'name': 'Other',\r\n      'placeholder': 'E.g. Psychology, Performing Arts'\r\n    }\r\n  };\r\n  const volunteerOptions = {\r\n    fieldName: 'volunteer',\r\n    fieldValue: volunteer,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Yes', 'No'\r\n    ],\r\n    exclusive: true\r\n  };\r\n  const volunteerLevelOptions = {\r\n    fieldName: 'volunteerLevel',\r\n    fieldValue: volunteerLevel,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Introductory', 'Intermediate', 'Advanced'\r\n    ]\r\n  };\r\n  const volunteerFrequencyTimeOptions = {\r\n    fieldName: 'volunteerFrequencyTime',\r\n    fieldValue: volunteerFrequencyTime,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'week', 'month', 'year'\r\n    ],\r\n    exclusive: true,\r\n    merge: true\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='professional-page-2-container'>\r\n      <h1>Professional Info</h1>\r\n      <h3>All fields required unless marked as \"Optional\".</h3>\r\n      <div className='field-container'>\r\n        <Tooltip arrow={true} open={errors['industryWork'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What industry(s) do you work in?</h2>\r\n            <h3 className='txt-block-select'>Please select up to three choices that apply:</h3>\r\n            <BlockSelection options={industryWorkOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['yourProfession'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What profession do you pursue?</h2>\r\n            <input className='w-full'\r\n              type='text' name='yourProfession' value={yourProfession || ''} placeholder='E.g. Business, fashion design' onChange={e => handleChange(e)} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['professionalUrl'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What is your LinkedIn or professional URL?</h2>\r\n            <input className='w-full'\r\n              type='text' name='professionalUrl' value={professionalUrl || ''} placeholder='' onChange={e => handleChange(e)} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['areasExpertise'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What are your areas of expertise?</h2>\r\n            <h3>Please list up to three:</h3>\r\n            <div className='textarea-container'>\r\n              <textarea placeholder='Strategic marketing, Project management, Staff development' maxLength='100' name='areasExpertise' wrap='soft' rows='2' value={areasExpertise || ''} onChange={e => handleChange(e)} />\r\n            </div>\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['volunteer'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Do you currently volunteer your time or expertise to help develop emerging youth, such as by being an instructor, mentor, speaker, etc.?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={volunteerOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        {((typeof surveyValues['volunteer'] === 'object') && (surveyValues['volunteer'] !== null)) && Object.values(surveyValues['volunteer'])[0] === 'Yes' ? <Tooltip arrow={true} open={errors['volunteerLevel'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container conditional'>\r\n            <h2>What level of instruction do you volunteer for?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={volunteerLevelOptions} />\r\n          </div>\r\n        </Tooltip> : ''}\r\n        {((typeof surveyValues['volunteer'] === 'object') && (surveyValues['volunteer'] !== null)) && Object.values(surveyValues['volunteer'])[0] === 'Yes' ? <Tooltip arrow={true} open={errors['volunteerFrequency'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container conditional'>\r\n            <h2>About how many times per week, month, or year?</h2>\r\n            <h3 className='txt-clarify'>Please provide your best estimate:</h3>\r\n            <p className='inline-input'>\r\n              I volunteer about <input type='number' min='0' name='volunteerFrequencyAmount' value={volunteerFrequencyAmount || ''} onChange={e => handleChange(e)} /> times per <BlockSelection options={volunteerFrequencyTimeOptions} />\r\n            </p>\r\n          </div>\r\n        </Tooltip> : ''}\r\n      </div>\r\n      <div className='btn-container'>\r\n        <button className='btn-prev' type='button'\r\n          onClick={() => handlePrevious()}>\r\n          Previous\r\n        </button>\r\n        <button className='btn-next' type='button'\r\n          onClick={() => handleNext()}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { animateScroll } from 'react-scroll';\r\nimport BlockSelection from '../BlockSelection';\r\nimport Checkbox from '../Checkbox';\r\nimport Radio from '../Radio';\r\n\r\nexport default props => {\r\n  const isTabletorMobile = useMediaQuery({ maxWidth: 767.98 });\r\n  const { setSurvey, setPage, setLogo, setValues } = props;\r\n  const initialState = props.values;\r\n\r\n  const [surveyValues, setSurveyValues] = useReducer(\r\n    (curVals, newVals) => ({ ...curVals, ...newVals }), initialState\r\n  );\r\n\r\n  const [errors, setErrors] = useState({ volunteerInterest: 0, volunteerWay: 0, subjectsInterested: 0, levelInstruction: 0, volunteerAmount: 0, timesAvailable: 0, ageGroups: 0, importanceTeach: 0, interestTIV: 0 });\r\n  const { volunteerInterest, volunteerWay, subjectsInterested, levelInstruction, volunteerAmountMonth, volunteerAmountWeek, volunteerAmountCheck, timesAvailable, ageGroups, importanceTeach, importanceTeachComments, charRemain, interestTIV, interestTIVCheck } = surveyValues;\r\n\r\n  useEffect(() => animateScroll.scrollToTop({ duration: 100 }), []);\r\n  useEffect(() => setValues(surveyValues), [surveyValues]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setSurveyValues({ [name]: value })\r\n  };\r\n  const handlePrevious = () => setPage(2);\r\n  const handleSubmit = () => {\r\n    let newErrors = Object.assign({}, errors);\r\n    let isError = false;\r\n\r\n    for (let field in errors) {\r\n      if (\r\n        (((field === 'volunteerInterest') || (field === 'interestTIV')) && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).length > 0)) ||\r\n        (((field === 'levelInstruction') || (field === 'timesAvailable') || (field === 'ageGroups')) && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).includes(1))) ||\r\n        ((field === 'volunteerWay') && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).length > 0) || !otherCheck(surveyValues[field])) ||\r\n        ((field === 'subjectsInterested') && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).includes(1)) || !otherCheck(surveyValues[field])) ||\r\n        ((field === 'volunteerAmount') && (!surveyValues['volunteerAmountMonth'] || !surveyValues['volunteerAmountWeek']) && !surveyValues['volunteerAmountCheck']) ||\r\n        ((field !== 'volunteerInterest') && (field !== 'volunteerWay') && (field !== 'subjectsInterested') && (field !== 'levelInstruction') && (field !== 'volunteerAmount') && (field !== 'interestTIV') && !surveyValues[field])\r\n      ) {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 1 });\r\n        isError = true;\r\n      } else {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 0 });\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    if (!isError) {\r\n      props.submit();\r\n      setLogo('img/logo_only.png');\r\n      setSurvey('thanks');\r\n    }\r\n    else animateScroll.scrollToTop({ duration: 100 });\r\n  };\r\n\r\n  const handleSetBlocks = (fieldName, blockValues) => setSurveyValues({ [fieldName]: blockValues });\r\n  const otherCheck = surveyBlockValue => {\r\n    // return true if (Other is NOT selected) or if (Other IS selected and Other-Text IS filled)\r\n    // return false if (Other IS selected and Other-Text is NOT filled)\r\n    if (!((typeof surveyBlockValue === 'object') && (surveyBlockValue !== null))) {\r\n      return true\r\n    }\r\n    let keys = Object.keys(surveyBlockValue);\r\n    if (\r\n      (keys.includes('Other') && surveyBlockValue['Other']) ||\r\n      (keys.includes('exclusive') && (surveyBlockValue['exclusive'] === 'Other'))\r\n    ) {\r\n      return keys.includes('Other-Text') && (surveyBlockValue['Other-Text'] !== '')\r\n    }\r\n    return true\r\n  };\r\n  const handleTextArea = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setSurveyValues({ ['importanceTeachComments']: value })\r\n    setSurveyValues({ ['charRemain']: 400 - value.length })\r\n  };\r\n  const handleSetCheckbox = (fieldCheck, checkState) => setSurveyValues({ [fieldCheck]: checkState });\r\n  const handleSetCheckboxDisabler = (fieldCheck, checkState) => {\r\n    let fieldName = fieldCheck.slice(0, -5);\r\n    if (checkState) {\r\n      if (fieldCheck === 'volunteerAmountCheck') {\r\n        setSurveyValues({ ['volunteerAmountMonth']: '' });\r\n        setSurveyValues({ ['volunteerAmountWeek']: '' });\r\n      } else {\r\n        setSurveyValues({ [fieldName]: '' });\r\n      }\r\n      setErrors(Object.assign({}, errors, { [fieldName]: 0 }));\r\n    }\r\n    setSurveyValues({ [fieldCheck]: checkState });\r\n  };\r\n\r\n  const volunteerInterestOptions = {\r\n    className: 'volunteer-interest',\r\n    fieldName: 'volunteerInterest',\r\n    fieldValue: volunteerInterest,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Yes', 'No', 'I already volunteer to develop emerging youth'\r\n    ],\r\n    exclusive: true\r\n  };\r\n  const volunteerWayOptions = {\r\n    className: 'volunteer-way',\r\n    fieldName: 'volunteerWay',\r\n    fieldValue: volunteerWay,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Creating Instructional Programs', 'Designing Curriculum for Programs',\r\n      'Instructor for Programs', 'Mentor During Programs',\r\n      'Speaker During Programs', 'Lecturer During Programs'\r\n    ],\r\n    exclusive: true,\r\n    otherOptions: {\r\n      'name': 'Other',\r\n      'placeholder': ''\r\n    },\r\n    noneOptions: {\r\n      'name': 'None'\r\n    }\r\n  };\r\n  const subjectsInterestedOptions = {\r\n    fieldName: 'subjectsInterested',\r\n    fieldValue: subjectsInterested,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Business', 'Science', 'Technology', 'Engineering',\r\n      'Math', 'Art', 'Music', 'History',\r\n      'Leadership', 'Literature', 'Education', 'Computer Programming',\r\n      'Marketing', 'Foreign Language', 'Health', 'Design'\r\n    ],\r\n    otherOptions: {\r\n      'name': 'Other',\r\n      'placeholder': 'E.g. Psychology, Performing Arts'\r\n    },\r\n    noneOptions: {\r\n      'name': 'None'\r\n    }\r\n  };\r\n  const levelInstructionOptions = {\r\n    fieldName: 'levelInstruction',\r\n    fieldValue: levelInstruction,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Introductory', 'Intermediate', 'Advanced'\r\n    ],\r\n    noneOptions: {\r\n      'name': 'None'\r\n    }\r\n  };\r\n  const volunteerAmountCheckOptions = {\r\n    fieldName: 'volunteerAmountCheck',\r\n    fieldValue: volunteerAmountCheck,\r\n    fieldLabel: 'I\\'m not interested in volunteering.',\r\n    setFieldValue: handleSetCheckboxDisabler,\r\n  };\r\n  const timesAvailableOptions = {\r\n    className: 'times-available',\r\n    fieldName: 'timesAvailable',\r\n    fieldValue: timesAvailable,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Mon', 'Tue', 'Wed', 'Thu', 'Fri',\r\n      'Morning', 'Noon', 'Early Evening',\r\n      'I\\'m Flexible', 'Unsure'\r\n    ],\r\n    noneOptions: {\r\n      'name': 'None'\r\n    }\r\n  };\r\n  const ageGroupsOptions = {\r\n    className: 'age-groups',\r\n    fieldName: 'ageGroups',\r\n    fieldValue: ageGroups,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Middle School (10-13)', 'High School (14-17)', 'College (18-21)',\r\n      'Young Adults (22-26)'\r\n    ],\r\n    noneOptions: {\r\n      'name': 'None'\r\n    }\r\n  };\r\n  const importanceTeachOptions = {\r\n    fieldName: 'importanceTeach',\r\n    fieldValue: importanceTeach,\r\n    sliderLabels: ['Not important', 'Somewhat important', 'Very important'],\r\n    setFieldValue: handleChange\r\n  };\r\n  const interestTIVOptions = {\r\n    fieldName: 'interestTIV',\r\n    fieldValue: interestTIV,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Yes', 'No'\r\n    ],\r\n    exclusive: true\r\n  };\r\n  const interestTIVCheckOptions = {\r\n    className: 'interest-tiv-check',\r\n    fieldName: 'interestTIVCheck',\r\n    fieldValue: interestTIVCheck,\r\n    fieldLabel: 'I would like to receive updates regarding TIV.',\r\n    setFieldValue: handleSetCheckbox,\r\n  };\r\n\r\n  return (\r\n    <div className='professional-page-3-container'>\r\n      <h1>Volunteering</h1>\r\n      <h3>All fields required unless marked as \"Optional\".</h3>\r\n      <div className='field-container'>\r\n        <Tooltip arrow={true} open={errors['volunteerInterest'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Would you be interested in volunteering your time and expertise to help develop emerging youth?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={volunteerInterestOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['volunteerWay'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>In what way are you interested in volunteering your time and expertise?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={volunteerWayOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['subjectsInterested'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What subject(s) are you interested in instructing, mentoring or speaking about?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={subjectsInterestedOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['levelInstruction'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What level of instruction would you like your students to receive?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={levelInstructionOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['volunteerAmount'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>About how many times per month are you able to volunteer? About how many hours per week?</h2>\r\n            <h3>Please provide your best estimate:</h3>\r\n            <p className={'inline-input' + (volunteerAmountCheck ? ' disabled' : '')}>\r\n              I am able to volunteer about <input type='number' min='0' max='30' name='volunteerAmountMonth' value={volunteerAmountMonth || ''} onChange={e => handleChange(e)} disabled={volunteerAmountCheck} /> times per month and about <input type='number' min='0' max='168' name='volunteerAmountWeek' value={volunteerAmountWeek || ''} onChange={e => handleChange(e)} disabled={volunteerAmountCheck} /> hours per week.\r\n            </p>\r\n            <Checkbox options={volunteerAmountCheckOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['timesAvailable'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What day(s) of the week and time(s) would you most likely be available?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={timesAvailableOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['ageGroups'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What age group(s) are you interested in working with?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={ageGroupsOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['importanceTeach'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>How important do you believe it is for professionals to teach what they know to emerging talent?</h2>\r\n            <Radio options={importanceTeachOptions} />\r\n            <div className='textarea-container'>\r\n              <h3>Comments (Optional)</h3>\r\n              <textarea maxLength='400' name='importanceTeachComments' wrap='soft' rows='5' value={importanceTeachComments || ''} onChange={e => handleTextArea(e)} />\r\n              <span className='char-remain'>{charRemain}</span>\r\n            </div>\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['interestTIV'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Would you be interested in learning more about TIV and how our company can help make an impact?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={interestTIVOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <div className='question-container'>\r\n          <Checkbox options={interestTIVCheckOptions} />\r\n        </div>\r\n      </div>\r\n      <div className='btn-container'>\r\n        <button className='btn-prev' type='button'\r\n          onClick={() => handlePrevious()}>\r\n          Previous\r\n        </button>\r\n        <button className='btn-submit' type='button'\r\n          onClick={() => handleSubmit()}>\r\n          SUBMIT\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport $ from 'jquery';\r\nimport Page1 from './Page1';\r\nimport Page2 from './Page2';\r\nimport Page3 from './Page3';\r\nimport ProgressBar from '../ProgressBar';\r\nimport {} from './professional.scss';\r\n\r\nexport default props => {\r\n  const { setSurvey, setLogo } = props;\r\n  const [page, setPage] = useState(1);\r\n  const [values1, setValues1] = useState({});\r\n  const [values2, setValues2] = useState({});\r\n  const [values3, setValues3] = useState({});\r\n\r\n  const submit = () => {\r\n    const data = {\r\n      'Name': values1['name'],\r\n      'Email': values1['email'],\r\n      'Phone Number': values1['phone'],\r\n      'City': values1['city'],\r\n      'State': values1['state'],\r\n      'Age': values1['age'],\r\n      'Gender (Optional)': values1['gender'],\r\n      'Ethnicity (Optional)': values1['ethnicity'],\r\n\r\n      'What industry(s) do you work in?': stringifyBlock(values2['industryWork']),\r\n      'What profession do you pursue?': values2['yourProfession'],\r\n      'What is your LinkedIn or professional URL?': values2['professionalUrl'],\r\n      'What are your areas of expertise?': values2['areasExpertise'],\r\n      'Do you currently volunteer your time or expertise to help develop emerging youth, such as by being an instructor, mentor, speaker, etc.?': stringifyBlock(values2['volunteer']),\r\n      'What level of instruction do you volunteer for?': stringifyBlock(values2['volunteerLevel']),\r\n      'About how many times per week, month, or year?': values2['volunteerFrequencyAmount'] + (values2['volunteerFrequencyAmount'] === 1 ? ' time' : ' times') + ' per ' + stringifyBlock(values2['volunteerFrequencyTime']),\r\n\r\n      'Would you be interested in volunteering your time and expertise to help develop emerging youth?': stringifyBlock(values3['volunteerInterest']),\r\n      'In what way are you interested in volunteering your time and expertise?': stringifyBlock(values3['volunteerWay']),\r\n      'What subject(s) are you interested in instructing, mentoring or speaking about?': stringifyBlock(values3['subjectsInterested']),\r\n      'What level of instruction would you like your students to receive?': stringifyBlock(values3['levelInstruction']),\r\n      'About how many times per month are you able to volunteer? About how many hours per week?': (values3['volunteerAmountCheck'] ? 'I\\'m not interested in volunteering.' : values3['volunteerAmountMonth'] + ' ' + values3['volunteerAmountWeek']),\r\n      'What day(s) of the week and time(s) would you most likely be available?': stringifyBlock(values3['timesAvailable']),\r\n      'What age group(s) are you interested in working with?': stringifyBlock(values3['ageGroups']),\r\n      'How important do you believe it is for professionals to teach what they know to emerging talent?': values3['importanceTeach'] + (values3['importanceTeachComments'] ? ': ' + values3['importanceTeachComments'] : ''),\r\n      'Would you be interested in learning more about TIV and how our company can help make an impact?': stringifyBlock(values3['interestTIV']),\r\n      'I would like to receive updates regarding TIV.': (values3['interestTIVCheck'] ? 'True' : 'False')\r\n    }\r\n\r\n    $.ajax({\r\n      url: process.env.REACT_APP_PROFESSIONAL_SURVEY_URL,\r\n      method: 'GET',\r\n      dataType: 'json',\r\n      data: data\r\n    })\r\n  };\r\n\r\n  const stringifyBlock = blockData => {\r\n    if (!blockData) return '';\r\n    let labels = Object.keys(blockData);\r\n    let stringOutput = '';\r\n\r\n    if (labels.includes('exclusive')) {\r\n      stringOutput += blockData['exclusive'];\r\n      if (labels.includes('Other-Text') && blockData['Other-Text']) stringOutput += ': ' + blockData['Other-Text'];\r\n    } else {\r\n      for (let label in blockData) {\r\n        if (blockData[label] === 1) {\r\n          stringOutput += (stringOutput ? ', ' : '') + label;\r\n          if (label === 'Other') stringOutput += ': ' + blockData['Other-Text'];\r\n        }\r\n      }\r\n    }\r\n\r\n    return stringOutput;\r\n  };\r\n\r\n  return <>\r\n    <ProgressBar survey='professional' page={page} />\r\n    {page === 1 ? <Page1 setSurvey={setSurvey} setPage={setPage} values={values1} setValues={setValues1} /> : ''}\r\n    {page === 2 ? <Page2 setPage={setPage} values={values2} setValues={setValues2} /> : ''}\r\n    {page === 3 ? <Page3 setSurvey={setSurvey} setPage={setPage} setLogo={setLogo} values={values3} setValues={setValues3} submit={submit} /> : ''}\r\n  </>\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { animateScroll } from 'react-scroll';\r\n\r\nexport default props => {\r\n  const { setSurvey, setPage, setValues } = props;\r\n  const initialState = props.values;\r\n\r\n  const [surveyValues, setSurveyValues] = useReducer(\r\n    (curVals, newVals) => ({ ...curVals, ...newVals }), initialState\r\n  )\r\n  const [errors, setErrors] = useState({ name: 0, email: 0, phone: 0, city: 0, state: 0, orgName: 0, affiliation: 0, url: 0 })\r\n  const { name, email, phone, city, state, gender, ethnicity, orgName, affiliation, url } = surveyValues;\r\n\r\n  useEffect(() => animateScroll.scrollToTop({ duration: 100 }), []);\r\n  useEffect(() => setValues(surveyValues), [surveyValues]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setSurveyValues({ [name]: value });\r\n  };\r\n  const handlePrevious = () => setSurvey('Landing');\r\n  const handleNext = () => {\r\n    let newErrors = Object.assign({}, errors);\r\n    let isError = false;\r\n\r\n    for (let field in errors) {\r\n      if (!surveyValues[field]) {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 1 });\r\n        isError = true;\r\n      } else {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 0 });\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    if (!isError) setPage(2);\r\n    else animateScroll.scrollToTop({ duration: 100 });\r\n  };\r\n\r\n  const handleSelect = (opt, field) => setSurveyValues({ [field]: opt['value'] });\r\n\r\n  const stateOptions = [\r\n    {value: 'Alabama', label: 'Alabama'}, {value: 'Alaska', label: 'Alaska'}, {value: 'Arizona', label: 'Arizona'}, {value: 'Arkansas', label: 'Arkansas'}, {value: 'California', label: 'California'},\r\n    {value: 'Colorado', label: 'Colorado'}, {value: 'Connecticut', label: 'Connecticut'}, {value: 'Delaware', label: 'Delaware'}, {value: 'Florida', label: 'Florida'}, {value: 'Georgia', label: 'Georgia'},\r\n    {value: 'Hawaii', label: 'Hawaii'}, {value: 'Idaho', label: 'Idaho'}, {value: 'Illinois', label: 'Illinois'}, {value: 'Indiana', label: 'Indiana'}, {value: 'Iowa', label: 'Iowa'},\r\n    {value: 'Kansas', label: 'Kansas'}, {value: 'Kentucky', label: 'Kentucky'}, {value: 'Louisiana', label: 'Louisiana'}, {value: 'Maine', label: 'Maine'}, {value: 'Maryland', label: 'Maryland'},\r\n    {value: 'Massachusetts', label: 'Massachusetts'}, {value: 'Michigan', label: 'Michigan'}, {value: 'Minnesota', label: 'Minnesota'}, {value: 'Mississippi', label: 'Mississippi'}, {value: 'Missouri', label: 'Missouri'},\r\n    {value: 'Montana', label: 'Montana'}, {value: 'Nebraska', label: 'Nebraska'}, {value: 'Nevada', label: 'Nevada'}, {value: 'New Hampshire', label: 'New Hampshire'}, {value: 'New Jersey', label: 'New Jersey'},\r\n    {value: 'New Mexico', label: 'New Mexico'}, {value: 'New York', label: 'New York'}, {value: 'North Carolina', label: 'North Carolina'}, {value: 'North Dakota', label: 'North Dakota'}, {value: 'Ohio', label: 'Ohio'},\r\n    {value: 'Oklahoma', label: 'Oklahoma'}, {value: 'Oregon', label: 'Oregon'}, {value: 'Pennsylvania', label: 'Pennsylvania'}, {value: 'Rhode Island', label: 'Rhode Island'}, {value: 'South Carolina', label: 'South Carolina'},\r\n    {value: 'South Dakota', label: 'South Dakota'}, {value: 'Tennessee', label: 'Tennessee'}, {value: 'Texas', label: 'Texas'}, {value: 'Utah', label: 'Utah'}, {value: 'Vermont', label: 'Vermont'},\r\n    {value: 'Virginia', label: 'Virginia'}, {value: 'Washington', label: 'Washington'}, {value: 'West Virginia', label: 'West Virginia'}, {value: 'Wisconsin', label: 'Wisconsin'}, {value: 'Wyoming', label: 'Wyoming'}\r\n  ];\r\n  const genderOptions = [\r\n    {value: 'Female', label: 'Female'}, {value: 'Male', label: 'Male'},\r\n    {value: 'Non-binary', label: 'Non-binary'}, {value: 'Transgender', label: 'Transgender'},\r\n    {value: 'Intersex', label: 'Intersex'}, {value: 'I prefer not to say', label: 'I prefer not to say'}\r\n  ];\r\n  const ethnicityOptions = [\r\n    {value: 'Asian or Pacific Islander', label: 'Asian or Pacific Islander'},\r\n    {value: 'Black or African American', label: 'Black or African American'},\r\n    {value: 'Hispanic or Latino', label: 'Hispanic or Latino'},\r\n    {value: 'Native American or Alaskan Native', label: 'Native American or Alaskan Native'},\r\n    {value: 'White or Caucasian', label: 'White or Caucasian'},\r\n    {value: 'Multiracial or Biracial', label: 'Multiracial or Biracial'},\r\n    {value: 'A race/ethnicity not listed here', label: 'A race/ethnicity not listed here'}\r\n  ];\r\n\r\n  return (\r\n    <div className='organization-page-1-container'>\r\n      <h1>Tell us about yourself</h1>\r\n      <h2>Basic information</h2>\r\n      <h3>All fields required unless marked as \"Optional\".</h3>\r\n      <div className='field-container'>\r\n        <Tooltip arrow={true} open={errors['name'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Name\r\n            <input type='text' name='name' value={name || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['email'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Email\r\n            <input className={errors['email'] ? 'error' : ''} type='text' name='email' value={email || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['phone'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Phone Number\r\n            <input className={errors['phone'] ? 'error' : ''} type='text' name='phone' value={phone || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['city'] ? true : false} placement='top-start' title='Required'>\r\n          <label>City\r\n            <input className={errors['city'] ? 'error' : ''} type='text' name='city' value={city || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['state'] ? true : false} placement='top-start' title='Required'>\r\n          <label>State\r\n            <Select className='select-container' classNamePrefix='react-select'\r\n              options={stateOptions}\r\n              placeholder='Please Select' value={state ? { value: state, label: state } : ''}\r\n              onChange={opt => handleSelect(opt, 'state')}/>\r\n          </label>\r\n        </Tooltip>\r\n        <label>Gender (Optional)\r\n          <Select className='select-container' classNamePrefix='react-select'\r\n            options={genderOptions}\r\n            placeholder='Please Select' value={gender ? { value: gender, label: gender } : ''}\r\n            onChange={opt => handleSelect(opt, 'gender')}/>\r\n        </label>\r\n        <label>Ethnicity (Optional)\r\n          <Select className='select-container' classNamePrefix='react-select'\r\n            options={ethnicityOptions}\r\n            placeholder='Please Select' value={ethnicity ? { value: ethnicity, label: ethnicity } : ''}\r\n            onChange={opt => handleSelect(opt, 'ethnicity')}/>\r\n        </label>\r\n        <Tooltip arrow={true} open={errors['orgName'] ? true : false} placement='top-start' title='Required'>\r\n          <label>School/Organization Name\r\n            <input className={errors['orgName'] ? 'error' : ''} type='text' name='orgName' value={orgName || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['affiliation'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Affiliation/Title\r\n            <input className={errors['affiliation'] ? 'error' : ''} type='text' name='affiliation' value={affiliation || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['url'] ? true : false} placement='top-start' title='Required'>\r\n          <label>School/Organization Website URL\r\n            <input className={errors['url'] ? 'error' : ''} type='text' name='url' value={url || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n      </div>\r\n      <div className='btn-container'>\r\n        <button className='btn-prev' type='button'\r\n          onClick={() => handlePrevious()}>\r\n          Previous\r\n        </button>\r\n        <button className='btn-next' type='button'\r\n          onClick={() => handleNext()}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { animateScroll } from 'react-scroll';\r\nimport BlockSelection from '../BlockSelection';\r\n\r\nexport default props => {\r\n  const isTabletorMobile = useMediaQuery({ maxWidth: 767.98 });\r\n  const { setPage, setValues } = props;\r\n  const initialState = props.values;\r\n\r\n  const [surveyValues, setSurveyValues] = useReducer(\r\n    (curVals, newVals) => ({ ...curVals, ...newVals }), initialState\r\n  );\r\n\r\n  const [errors, setErrors] = useState({ partnerInterest: 0, partnerCurrent: 0, learnerAmount: 0, learnerAge: 0, learnerGrade: 0, learnerGradeAccess: 0, ethnicityDistribution: 0, instructionDistribution: 0, learnerSubjects: 0, learnerInstructLevel: 0 })\r\n  const { partnerInterest, partnerCurrent, learnerAmount, learnerAge, learnerGrade, learnerGradeAccess, ethnicityDistribution, instructionDistribution, learnerSubjects, learnerInstructLevel } = surveyValues;\r\n\r\n  useEffect(() => animateScroll.scrollToTop({ duration: 100 }), []);\r\n  useEffect(() => setValues(surveyValues), [surveyValues]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setSurveyValues({ [name]: value });\r\n  };\r\n  const handlePrevious = () => setPage(1);\r\n  const handleNext = () => {\r\n    let newErrors = Object.assign({}, errors);\r\n    let isError = false;\r\n\r\n    for (let field in errors) {\r\n      if (\r\n        (((field === 'partnerInterest') || (field === 'partnerCurrent') || (field === 'learnerGradeAccess')) && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).length > 0)) ||\r\n        (((field === 'learnerGrade') || (field === 'learnerInstructLevel')) && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).includes(1))) ||\r\n        (((field === 'learnerAmount') || (field === 'learnerAge')) && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).length > 0) || !otherCheck(surveyValues[field])) ||\r\n        ((field === 'learnerSubjects') && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).includes(1)) || !otherCheck(surveyValues[field])) ||\r\n        ((field === 'ethnicityDistribution') && (!ethnicityDistribution || (Object.values(ethnicityDistribution).reduce((accumulator, currentValue) => parseInt(accumulator) + (parseInt(currentValue) || 0), 0) !== 100))) ||\r\n        ((field === 'instructionDistribution') && (!instructionDistribution || (Object.values(instructionDistribution).reduce((accumulator, currentValue) => parseInt(accumulator) + (parseInt(currentValue) || 0), 0) !== 100)))\r\n      ) {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 1 });\r\n        isError = true;\r\n      } else {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 0 });\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    if (!isError) setPage(3);\r\n    else animateScroll.scrollToTop({ duration: 100 });\r\n  };\r\n\r\n  const handleSetBlocks = (fieldName, blockValues) => setSurveyValues({ [fieldName]: blockValues });\r\n  const otherCheck = surveyBlockValue => {\r\n    // return true if (Other is NOT selected) or if (Other IS selected and Other-Text IS filled)\r\n    // return false if (Other IS selected and Other-Text is NOT filled)\r\n    if (!((typeof surveyBlockValue === 'object') && (surveyBlockValue !== null))) {\r\n      return true\r\n    }\r\n    let keys = Object.keys(surveyBlockValue);\r\n    if (\r\n      (keys.includes('Other') && surveyBlockValue['Other']) ||\r\n      (keys.includes('exclusive') && (surveyBlockValue['exclusive'] === 'Other'))\r\n    ) {\r\n      return keys.includes('Other-Text') && (surveyBlockValue['Other-Text'] !== '')\r\n    }\r\n    return true\r\n  };\r\n  const handleSetGroupInput = (e, fieldName) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    if (surveyValues[fieldName]) {\r\n      let fieldCopy = Object.assign({}, surveyValues[fieldName], { [name]: value });\r\n      setSurveyValues({ [fieldName]: fieldCopy })\r\n    } else {\r\n      setSurveyValues({ [fieldName]: { [name]: value }})\r\n    }\r\n  };\r\n\r\n  const partnerInterestOptions = {\r\n    fieldName: 'partnerInterest',\r\n    fieldValue: partnerInterest,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Yes', 'No'\r\n    ],\r\n    exclusive: true\r\n  };\r\n  const partnerCurrentOptions = {\r\n    fieldName: 'partnerCurrent',\r\n    fieldValue: partnerCurrent,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Yes', 'No'\r\n    ],\r\n    exclusive: true\r\n  };\r\n  const learnerAmountOptions = {\r\n    className: 'learner-amount',\r\n    fieldName: 'learnerAmount',\r\n    fieldValue: learnerAmount,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      '1-50', '51-75', '76-120'\r\n    ],\r\n    exclusive: true,\r\n    otherOptions: {\r\n      'name': 'Other',\r\n      'placeholder': ''\r\n    }\r\n  };\r\n  const learnerAgeOptions = {\r\n    className: 'learner-age',\r\n    fieldName: 'learnerAge',\r\n    fieldValue: learnerAge,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      '9-13', '14-25'\r\n    ],\r\n    exclusive: true,\r\n    otherOptions: {\r\n      'name': 'Other',\r\n      'placeholder': ''\r\n    }\r\n  };\r\n  const learnerGradeOptions = {\r\n    fieldName: 'learnerGrade',\r\n    fieldValue: learnerGrade,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Elementary School', 'Middle School', 'High School', 'College'\r\n    ],\r\n    noneOptions: {\r\n      'name': 'Not Applicable'\r\n    }\r\n  };\r\n  const learnerGradeAccessOptions = {\r\n    fieldName: 'learnerGradeAccess',\r\n    fieldValue: learnerGradeAccess,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Elementary School', 'Middle School', 'High School', 'College'\r\n    ],\r\n    exclusive: true,\r\n    noneOptions: {\r\n      'name': 'Not Applicable'\r\n    }\r\n  };\r\n  const learnerSubjectsOptions = {\r\n    fieldName: 'learnerSubjects',\r\n    fieldValue: learnerSubjects,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Business', 'Science', 'Technology', 'Engineering',\r\n      'Math', 'Art', 'Music', 'History',\r\n      'Leadership', 'Literature', 'Education', 'Computer Programming',\r\n      'Marketing', 'Foreign Language', 'Health', 'Design'\r\n    ],\r\n    otherOptions: {\r\n      'name': 'Other',\r\n      'placeholder': 'E.g. Psychology, Performing Arts'\r\n    },\r\n    noneOptions: {\r\n      'name': 'None'\r\n    }\r\n  };\r\n  const learnerInstructLevelOptions = {\r\n    fieldName: 'learnerInstructLevel',\r\n    fieldValue: learnerInstructLevel,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Introductory', 'Intermediate', 'Advanced'\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className='organization-page-2-container'>\r\n      <h1>Institution Info</h1>\r\n      <h3>All fields required unless marked as \"Optional\".</h3>\r\n      <div className='field-container'>\r\n        <Tooltip arrow={true} open={errors['partnerInterest'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Are you interested in a partnership that will allow your students to attend TIV programs?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={partnerInterestOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['partnerCurrent'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Are you already partnering with other educational or professional development providers?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={partnerCurrentOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['learnerAmount'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>How many learners/students do you represent?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={learnerAmountOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['learnerAge'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What is the age-range of your students?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={learnerAgeOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['learnerGrade'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What is the grade-level of your students?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={learnerGradeOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['learnerGradeAccess'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What grade-level of students would you like to access TIV programs?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={learnerGradeAccessOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['ethnicityDistribution'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required: Total is 100'>\r\n          <div className='question-container'>\r\n            <h2>What are the percentages of race/ethnicity of your students?</h2>\r\n            <h3 className='txt-clarify'>Please provide your best estimate:</h3>\r\n            <div className='group-wrapper'>\r\n              <label onClick={e => e.preventDefault()}>Black/African-American\r\n                <input type='number' min='0' max='100' name='black/african-american' value={ethnicityDistribution ? ethnicityDistribution['black/african-american'] : ''} onChange={e => handleSetGroupInput(e, 'ethnicityDistribution')} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>Hispanic/Non-Black\r\n                <input type='number' min='0' max='100' name='hispanic/non-black' value={ethnicityDistribution ? ethnicityDistribution['hispanic/non-black'] : ''} onChange={e => handleSetGroupInput(e, 'ethnicityDistribution')} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>Asian\r\n                <input type='number' min='0' max='100' name='asian' value={ethnicityDistribution ? ethnicityDistribution['asian'] : ''} onChange={e => handleSetGroupInput(e, 'ethnicityDistribution')} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>Native American\r\n                <input type='number' min='0' max='100' name='native american' value={ethnicityDistribution ? ethnicityDistribution['native american'] : ''} onChange={e => handleSetGroupInput(e, 'ethnicityDistribution')} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>Pacific Islander\r\n                <input type='number' min='0' max='100' name='pacific islander' value={ethnicityDistribution ? ethnicityDistribution['pacific islander'] : ''} onChange={e => handleSetGroupInput(e, 'ethnicityDistribution')} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>White\r\n                <input type='number' min='0' max='100' name='white' value={ethnicityDistribution ? ethnicityDistribution['white'] : ''} onChange={e => handleSetGroupInput(e, 'ethnicityDistribution')} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>Other\r\n                <input type='number' min='0' max='100' name='other' value={ethnicityDistribution ? ethnicityDistribution['other'] : ''} onChange={e => handleSetGroupInput(e, 'ethnicityDistribution')} />\r\n              </label>\r\n              <label className='group-total' onClick={e => e.preventDefault()}>Total\r\n                <input type='number' name='Total' value={ethnicityDistribution ? Object.values(ethnicityDistribution).reduce((accumulator, currentValue) => parseInt(accumulator) + (parseInt(currentValue) || 0), 0) : 0} />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['instructionDistribution'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required: Total is 100'>\r\n          <div className='question-container'>\r\n            <h2>What percentages of instruction time are related to business, tech, STEM, STEAM, and professional development?</h2>\r\n            <h3 className='txt-clarify'>Please provide your best estimate:</h3>\r\n            <div className='group-wrapper'>\r\n              <label onClick={e => e.preventDefault()}>Business-based\r\n                <input type='number' min='0' max='100' name='business-based' value={instructionDistribution ? instructionDistribution['business-based'] : ''} onChange={e => handleSetGroupInput(e, 'instructionDistribution')} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>Tech-based\r\n                <input type='number' min='0' max='100' name='tech-based' value={instructionDistribution ? instructionDistribution['tech-based'] : ''} onChange={e => handleSetGroupInput(e, 'instructionDistribution')} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>STEM/STEAM\r\n                <input type='number' min='0' max='100' name='stem/steam' value={instructionDistribution ? instructionDistribution['stem/steam'] : ''} onChange={e => handleSetGroupInput(e, 'instructionDistribution')} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>Professional Development\r\n                <input type='number' min='0' max='100' name='professional development' value={instructionDistribution ? instructionDistribution['professional development'] : ''} onChange={e => handleSetGroupInput(e, 'instructionDistribution')} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>Project-based Learning\r\n                <input type='number' min='0' max='100' name='project-based learning' value={instructionDistribution ? instructionDistribution['project-based learning'] : ''} onChange={e => handleSetGroupInput(e, 'instructionDistribution')} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>Other Subjects\r\n                <input type='number' min='0' max='100' name='other subjects' value={instructionDistribution ? instructionDistribution['other subjects'] : ''} onChange={e => handleSetGroupInput(e, 'instructionDistribution')} />\r\n              </label>\r\n              <label className='group-total' onClick={e => e.preventDefault()}>Total\r\n                <input type='number' name='Total' value={instructionDistribution ? Object.values(instructionDistribution).reduce((accumulator, currentValue) => parseInt(accumulator) + (parseInt(currentValue) || 0), 0) : 0} />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['learnerSubjects'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What subject(s) or fields would you like your students to learn and engage in at TIV?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={learnerSubjectsOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['learnerInstructLevel'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What level of instruction would you like your students to receive?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={learnerInstructLevelOptions} />\r\n          </div>\r\n        </Tooltip>\r\n      </div>\r\n      <div className='btn-container'>\r\n        <button className='btn-prev' type='button'\r\n          onClick={() => handlePrevious()}>\r\n          Previous\r\n        </button>\r\n        <button className='btn-next' type='button'\r\n          onClick={() => handleNext()}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { animateScroll } from 'react-scroll';\r\nimport BlockSelection from '../BlockSelection';\r\nimport Checkbox from '../Checkbox';\r\n\r\nexport default props => {\r\n  const isTabletorMobile = useMediaQuery({ maxWidth: 767.98 });\r\n  const { setSurvey, setPage, setLogo, setValues } = props;\r\n  const initialState = props.values;\r\n\r\n  const [surveyValues, setSurveyValues] = useReducer(\r\n    (curVals, newVals) => ({ ...curVals, ...newVals }), initialState\r\n  );\r\n\r\n  const [errors, setErrors] = useState({ programProvide: 0, programProvideSpecify: 0, studentInterest: 0, studentAttendFrequency: 0, studentAttendTimes: 0, studentTransportation: 0, studentActivities: 0, interestTIV: 0 });\r\n  const { programProvide, programProvideSpecify, studentInterest, studentAttendFrequency, studentAttendFrequencyCheck, studentAttendTimes, studentTransportation, studentActivities, interestTIV, interestTIVCheck } = surveyValues;\r\n\r\n  useEffect(() => animateScroll.scrollToTop({ duration: 100 }), []);\r\n  useEffect(() => setValues(surveyValues), [surveyValues]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setSurveyValues({ [name]: value })\r\n  };\r\n  const handlePrevious = () => setPage(2);\r\n  const handleSubmit = () => {\r\n    let newErrors = Object.assign({}, errors);\r\n    let isError = false;\r\n\r\n    for (let field in errors) {\r\n      if (\r\n        (((field === 'studentTransportation') || (field === 'interestTIV')) && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).length > 0)) ||\r\n        (((field === 'studentAttendTimes') || (field === 'studentActivities')) && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).includes(1))) ||\r\n        ((field === 'programProvide') && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).length > 0) || !otherCheck(surveyValues[field])) ||\r\n        (\r\n          (field === 'programProvideSpecify') &&\r\n          ((typeof surveyValues['programProvide'] === 'object') && (surveyValues['programProvide'] !== null)) &&\r\n          Object.values(surveyValues['programProvide'])[0] === 'Yes' &&\r\n          !Object.values(surveyValues[field]).includes(1)\r\n        ) ||\r\n        ((field === 'studentInterest') && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).includes(1)) || !otherCheck(surveyValues[field])) ||\r\n        ((field === 'studentAttendFrequency') && !surveyValues[field] && !surveyValues['studentAttendFrequencyCheck'])\r\n      ) {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 1 });\r\n        isError = true;\r\n      } else {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 0 });\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    if (!isError) {\r\n      props.submit();\r\n      setLogo('img/logo_only.png');\r\n      setSurvey('thanks');\r\n    }\r\n    else animateScroll.scrollToTop({ duration: 100 });\r\n  };\r\n\r\n  const handleSetBlocks = (fieldName, blockValues) => setSurveyValues({ [fieldName]: blockValues });\r\n  const otherCheck = surveyBlockValue => {\r\n    // return true if (Other is NOT selected) or if (Other IS selected and Other-Text IS filled)\r\n    // return false if (Other IS selected and Other-Text is NOT filled)\r\n    if (!((typeof surveyBlockValue === 'object') && (surveyBlockValue !== null))) {\r\n      return true\r\n    }\r\n    let keys = Object.keys(surveyBlockValue);\r\n    if (\r\n      (keys.includes('Other') && surveyBlockValue['Other']) ||\r\n      (keys.includes('exclusive') && (surveyBlockValue['exclusive'] === 'Other'))\r\n    ) {\r\n      return keys.includes('Other-Text') && (surveyBlockValue['Other-Text'] !== '')\r\n    }\r\n    return true\r\n  };\r\n  const handleSetCheckbox = (fieldCheck, checkState) => setSurveyValues({ [fieldCheck]: checkState });\r\n  const handleSetCheckboxDisabler = (fieldCheck, checkState) => {\r\n    let fieldName = fieldCheck.slice(0, -5);\r\n    if (checkState) {\r\n      setSurveyValues({ [fieldName]: '' });\r\n      setErrors(Object.assign({}, errors, { [fieldName]: 0 }));\r\n    }\r\n    setSurveyValues({ [fieldCheck]: checkState });\r\n  };\r\n\r\n  const programProvideOptions = {\r\n    fieldName: 'programProvide',\r\n    fieldValue: programProvide,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Yes', 'No'\r\n    ],\r\n    exclusive: true,\r\n    otherOptions: {\r\n      'name': 'Other',\r\n      'placeholder': 'E.g. Psychology, Performing Arts'\r\n    }\r\n  };\r\n  const programProvideSpecifyOptions = {\r\n    fieldName: 'programProvideSpecify',\r\n    fieldValue: programProvideSpecify,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Business', 'Tech', 'STEM/STEAM'\r\n    ]\r\n  };\r\n  const studentInterestOptions = {\r\n    className: 'student-interest',\r\n    fieldName: 'studentInterest',\r\n    fieldValue: studentInterest,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Computer Programming', 'Design', 'Robotics', 'Engineering',\r\n      'Artificial Intelligence', 'Cyber Security', 'Nanotechnology', 'Nanoscience'\r\n    ],\r\n    otherOptions: {\r\n      'name': 'Other',\r\n      'placeholder': 'E.g. Psychology, Performing Arts'\r\n    }\r\n  };\r\n  const studentAttendFrequencyCheckOptions = {\r\n    className: 'inline-disabler',\r\n    fieldName: 'studentAttendFrequencyCheck',\r\n    fieldValue: studentAttendFrequencyCheck,\r\n    fieldLabel: 'I\\'m not interested in a partnership.',\r\n    setFieldValue: handleSetCheckboxDisabler\r\n  };\r\n  const studentAttendTimesOptions = {\r\n    className: 'student-attend-times',\r\n    fieldName: 'studentAttendTimes',\r\n    fieldValue: studentAttendTimes,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\r\n      '8:30 AM - 11:30 AM', '12:00 PM - 3:00 PM', '3:30 PM - 6:30 PM'\r\n    ],\r\n    noneOptions: {\r\n      'name': 'None'\r\n    }\r\n  };\r\n  const studentTransportationOptions = {\r\n    fieldName: 'studentTransportation',\r\n    fieldValue: studentTransportation,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Yes', 'No', 'Sometimes'\r\n    ],\r\n    exclusive: true\r\n  };\r\n  const studentActivitiesOptions = {\r\n    fieldName: 'studentActivities',\r\n    fieldValue: studentActivities,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Project Collaborations', 'Panel Discussions', 'Competitions',\r\n      'Lectures', 'Mentoring', 'Training', 'Tours',\r\n    ],\r\n    otherOptions: {\r\n      'name': 'Other',\r\n      'placeholder': ''\r\n    },\r\n    noneOptions: {\r\n      'name': 'I\\'m Unsure'\r\n    }\r\n  };\r\n  const interestTIVOptions = {\r\n    fieldName: 'interestTIV',\r\n    fieldValue: interestTIV,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Yes', 'No'\r\n    ],\r\n    exclusive: true\r\n  };\r\n  const interestTIVCheckOptions = {\r\n    className: 'interest-tiv-check',\r\n    fieldName: 'interestTIVCheck',\r\n    fieldValue: interestTIVCheck,\r\n    fieldLabel: 'I would like to receive updates regarding TIV.',\r\n    setFieldValue: handleSetCheckbox,\r\n  };\r\n\r\n  return (\r\n    <div className='organization-page-3-container'>\r\n      <h1>Partnership</h1>\r\n      <h3>All fields required unless marked as \"Optional\".</h3>\r\n      <div className='field-container'>\r\n        <Tooltip arrow={true} open={errors['programProvide'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Does the school/organization provide business, tech, STEM/STEAM or other programs?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={programProvideOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        {((typeof surveyValues['programProvide'] === 'object') && (surveyValues['programProvide'] !== null)) && Object.values(surveyValues['programProvide'])[0] === 'Yes' ? <Tooltip arrow={true} open={errors['programProvideSpecify'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container conditional'>\r\n            <h2>Which programs?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={programProvideSpecifyOptions} />\r\n          </div>\r\n        </Tooltip> : ''}\r\n        <Tooltip arrow={true} open={errors['studentInterest'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What tech-based subject-matters or industries are of the most interest to your students?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={studentInterestOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['studentAttendFrequency'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>About how many days per month can students attend TIV programs?</h2>\r\n            <h3 className='txt-clarify'>Please provide your best estimate:</h3>\r\n            <p className={'inline-input' + (studentAttendFrequencyCheck ? ' disabled' : '')}>\r\n              Students can attend about <input type='number' min='0' max='30' name='studentAttendFrequency' value={studentAttendFrequency || ''} onChange={e => handleChange(e)} disabled={studentAttendFrequencyCheck} /> days per month.\r\n            </p>\r\n            <Checkbox options={studentAttendFrequencyCheckOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['studentAttendTimes'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What day(s) and time(s) would your students be able to attend a TIV program?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={studentAttendTimesOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['studentTransportation'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Are you able to provide transportation (i.e. bus, van, car, etc.) for students?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={studentTransportationOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['studentActivities'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What types of activities would your students benefit from?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={studentActivitiesOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['interestTIV'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Would you be interested in learning more about TIV and how our company can help make an impact?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={interestTIVOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <div className='question-container'>\r\n          <Checkbox options={interestTIVCheckOptions} />\r\n        </div>\r\n      </div>\r\n      <div className='btn-container'>\r\n        <button className='btn-prev' type='button'\r\n          onClick={() => handlePrevious()}>\r\n          Previous\r\n        </button>\r\n        <button className='btn-submit' type='button'\r\n          onClick={() => handleSubmit([])}>\r\n          SUBMIT\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport $ from 'jquery';\r\nimport Page1 from './Page1';\r\nimport Page2 from './Page2';\r\nimport Page3 from './Page3';\r\nimport ProgressBar from '../ProgressBar';\r\nimport {} from './organization.scss';\r\n\r\nexport default props => {\r\n  const { setSurvey, setLogo } = props;\r\n  const [page, setPage] = useState(1);\r\n  const [values1, setValues1] = useState({});\r\n  const [values2, setValues2] = useState({});\r\n  const [values3, setValues3] = useState({});\r\n\r\n  const submit = () => {\r\n    const data = {\r\n      'Name': values1['name'],\r\n      'Email': values1['email'],\r\n      'Phone Number': values1['phone'],\r\n      'City': values1['city'],\r\n      'State': values1['state'],\r\n      'Gender (Optional)': values1['gender'],\r\n      'Ethnicity (Optional)': values1['ethnicity'],\r\n      'School/Organization Name': values1['orgName'],\r\n      'Affiliation/Title': values1['affiliation'],\r\n      'School/Organization Website URL': values1['url'],\r\n\r\n      'Are you interested in a partnership that will allow your students to attend TIV programs?': stringifyBlock(values2['partnerInterest']),\r\n      'Are you already partnering with other educational or professional development providers?': stringifyBlock(values2['partnerCurrent']),\r\n      'How many learners/students do you represent?': stringifyBlock(values2['learnerAmount']),\r\n      'What is the age-range of your students?': stringifyBlock(values2['learnerAge']),\r\n      'What is the grade-level of your students?': stringifyBlock(values2['learnerGrade']),\r\n      'What grade-level of students would you like to access TIV programs?': stringifyBlock(values2['learnerGradeAccess']),\r\n      'What are the percentages of race/ethnicity of your students?': stringifyGroup(values2['ethnicityDistribution']),\r\n      'What percentages of instruction time are related to business, tech, STEM, STEAM, and professional development?': stringifyGroup(values2['instructionDistribution']),\r\n      'What subject(s) or fields would you like your students to learn and engage in at TIV?': stringifyBlock(values2['learnerSubjects']),\r\n      'What level of instruction would you like your students to receive?': stringifyBlock(values2['learnerInstructLevel']),\r\n\r\n      'Does the school/organization provide business, tech, STEM/STEAM or other programs?': stringifyBlock(values3['programProvide']),\r\n      'Which programs?': stringifyBlock(values3['programProvideSpecify']),\r\n      'What tech-based subject-matters or industries are of the most interest to your students?': stringifyBlock(values3['studentInterest']),\r\n      'About how many days per month can students attend TIV programs?': (values3['studentAttendFrequencyCheck'] ? 'I\\'m not interested in a partnership.' : values3['studentAttendFrequency']),\r\n      'What day(s) and time(s) would your students be able to attend a TIV program?': stringifyBlock(values3['studentAttendTimes']),\r\n      'Are you able to provide transportation (i.e. bus, van, car, etc.) for students?': stringifyBlock(values3['studentTransportation']),\r\n      'What types of activities would your students benefit from?': stringifyBlock(values3['studentActivities']),\r\n      'Would you be interested in learning more about TIV and how our company can help make an impact?': stringifyBlock(values3['interestTIV']),\r\n      'I would like to receive updates regarding TIV.': (values3['interestTIVCheck'] ? 'True' : 'False')\r\n    }\r\n\r\n    console.log(process.env.REACT_APP_ORGANIZATION_SURVEY_URL)\r\n\r\n    $.ajax({\r\n      url: process.env.REACT_APP_ORGANIZATION_SURVEY_URL,\r\n      method: 'GET',\r\n      dataType: 'json',\r\n      data: data\r\n    })\r\n  };\r\n\r\n  const stringifyBlock = blockData => {\r\n    if (!blockData) return '';\r\n    let labels = Object.keys(blockData);\r\n    let stringOutput = '';\r\n\r\n    if (labels.includes('exclusive')) {\r\n      stringOutput += blockData['exclusive'];\r\n      if (labels.includes('Other-Text') && blockData['Other-Text']) stringOutput += ': ' + blockData['Other-Text'];\r\n    } else {\r\n      for (let label in blockData) {\r\n        if (blockData[label] === 1) {\r\n          stringOutput += (stringOutput ? ', ' : '') + label;\r\n          if (label === 'Other') stringOutput += ': ' + blockData['Other-Text'];\r\n        }\r\n      }\r\n    }\r\n\r\n    return stringOutput;\r\n  };\r\n  const stringifyGroup = groupData => {\r\n    let groupArr = [];\r\n    for (let key in groupData) groupArr.push(key + ': ' + groupData[key]);\r\n    return groupArr.join(', ');\r\n  };\r\n\r\n  return <>\r\n    <ProgressBar survey='organization/academic institution' page={page} />\r\n    {page === 1 ? <Page1 setSurvey={setSurvey} setPage={setPage} values={values1} setValues={setValues1} /> : ''}\r\n    {page === 2 ? <Page2 setPage={setPage} values={values2} setValues={setValues2} /> : ''}\r\n    {page === 3 ? <Page3 setSurvey={setSurvey} setPage={setPage} setLogo={setLogo} values={values3} setValues={setValues3} submit={submit} /> : ''}\r\n  </>\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { animateScroll } from 'react-scroll';\r\n\r\nexport default props => {\r\n  const { setSurvey, setPage, setValues } = props;\r\n  const initialState = props.values;\r\n\r\n  const [surveyValues, setSurveyValues] = useReducer(\r\n    (curVals, newVals) => ({ ...curVals, ...newVals }), initialState\r\n  )\r\n  const [errors, setErrors] = useState({ name: 0, email: 0, companyName: 0, affiliation: 0, industry: 0, city: 0, state: 0, url: 0 })\r\n  const { name, email, companyName, affiliation, industry, city, state, url } = surveyValues;\r\n\r\n  useEffect(() => animateScroll.scrollToTop({ duration: 100 }), []);\r\n  useEffect(() => setValues(surveyValues), [surveyValues]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setSurveyValues({ [name]: value });\r\n  };\r\n  const handlePrevious = () => setSurvey('Landing');\r\n  const handleNext = () => {\r\n    let newErrors = Object.assign({}, errors);\r\n    let isError = false;\r\n\r\n    for (let field in errors) {\r\n      if (!surveyValues[field]) {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 1 });\r\n        isError = true;\r\n      } else {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 0 });\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    if (!isError) setPage(2);\r\n    else animateScroll.scrollToTop({ duration: 100 });\r\n  };\r\n\r\n  const handleSelect = (opt, field) => setSurveyValues({ [field]: opt['value'] });\r\n\r\n  const stateOptions = [\r\n    {value: 'Alabama', label: 'Alabama'}, {value: 'Alaska', label: 'Alaska'}, {value: 'Arizona', label: 'Arizona'}, {value: 'Arkansas', label: 'Arkansas'}, {value: 'California', label: 'California'},\r\n    {value: 'Colorado', label: 'Colorado'}, {value: 'Connecticut', label: 'Connecticut'}, {value: 'Delaware', label: 'Delaware'}, {value: 'Florida', label: 'Florida'}, {value: 'Georgia', label: 'Georgia'},\r\n    {value: 'Hawaii', label: 'Hawaii'}, {value: 'Idaho', label: 'Idaho'}, {value: 'Illinois', label: 'Illinois'}, {value: 'Indiana', label: 'Indiana'}, {value: 'Iowa', label: 'Iowa'},\r\n    {value: 'Kansas', label: 'Kansas'}, {value: 'Kentucky', label: 'Kentucky'}, {value: 'Louisiana', label: 'Louisiana'}, {value: 'Maine', label: 'Maine'}, {value: 'Maryland', label: 'Maryland'},\r\n    {value: 'Massachusetts', label: 'Massachusetts'}, {value: 'Michigan', label: 'Michigan'}, {value: 'Minnesota', label: 'Minnesota'}, {value: 'Mississippi', label: 'Mississippi'}, {value: 'Missouri', label: 'Missouri'},\r\n    {value: 'Montana', label: 'Montana'}, {value: 'Nebraska', label: 'Nebraska'}, {value: 'Nevada', label: 'Nevada'}, {value: 'New Hampshire', label: 'New Hampshire'}, {value: 'New Jersey', label: 'New Jersey'},\r\n    {value: 'New Mexico', label: 'New Mexico'}, {value: 'New York', label: 'New York'}, {value: 'North Carolina', label: 'North Carolina'}, {value: 'North Dakota', label: 'North Dakota'}, {value: 'Ohio', label: 'Ohio'},\r\n    {value: 'Oklahoma', label: 'Oklahoma'}, {value: 'Oregon', label: 'Oregon'}, {value: 'Pennsylvania', label: 'Pennsylvania'}, {value: 'Rhode Island', label: 'Rhode Island'}, {value: 'South Carolina', label: 'South Carolina'},\r\n    {value: 'South Dakota', label: 'South Dakota'}, {value: 'Tennessee', label: 'Tennessee'}, {value: 'Texas', label: 'Texas'}, {value: 'Utah', label: 'Utah'}, {value: 'Vermont', label: 'Vermont'},\r\n    {value: 'Virginia', label: 'Virginia'}, {value: 'Washington', label: 'Washington'}, {value: 'West Virginia', label: 'West Virginia'}, {value: 'Wisconsin', label: 'Wisconsin'}, {value: 'Wyoming', label: 'Wyoming'}\r\n  ];\r\n\r\n  return (\r\n    <div className='corporation-page-1-container'>\r\n      <h1>Tell us about yourself</h1>\r\n      <h2>Basic information</h2>\r\n      <h3>All fields required unless marked as \"Optional\".</h3>\r\n      <div className='field-container'>\r\n        <Tooltip arrow={true} open={errors['name'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Name\r\n            <input type='text' name='name' value={name || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['email'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Email\r\n            <input className={errors['email'] ? 'error' : ''} type='text' name='email' value={email || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['companyName'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Company Name\r\n            <input className={errors['companyName'] ? 'error' : ''} type='text' name='companyName' value={companyName || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['affiliation'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Affiliation/Title\r\n            <input className={errors['affiliation'] ? 'error' : ''} type='text' name='affiliation' value={affiliation || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['industry'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Industry\r\n            <input className={errors['industry'] ? 'error' : ''} type='text' name='industry' value={industry || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['city'] ? true : false} placement='top-start' title='Required'>\r\n          <label>City\r\n            <input className={errors['city'] ? 'error' : ''} type='text' name='city' value={city || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['state'] ? true : false} placement='top-start' title='Required'>\r\n          <label>State\r\n            <Select className='select-container' classNamePrefix='react-select'\r\n              options={stateOptions}\r\n              placeholder='Please Select' value={state ? { value: state, label: state } : ''}\r\n              onChange={opt => handleSelect(opt, 'state')}/>\r\n          </label>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['url'] ? true : false} placement='top-start' title='Required'>\r\n          <label>Company Website URL\r\n            <input className={errors['url'] ? 'error' : ''} type='text' name='url' value={url || ''} onChange={e => handleChange(e)} />\r\n          </label>\r\n        </Tooltip>\r\n      </div>\r\n      <div className='btn-container'>\r\n        <button className='btn-prev' type='button'\r\n          onClick={() => handlePrevious()}>\r\n          Previous\r\n        </button>\r\n        <button className='btn-next' type='button'\r\n          onClick={() => handleNext()}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { animateScroll } from 'react-scroll';\r\nimport BlockSelection from '../BlockSelection';\r\nimport Checkbox from '../Checkbox';\r\n\r\nexport default props => {\r\n  const isTabletorMobile = useMediaQuery({ maxWidth: 767.98 });\r\n  const { setPage, setValues } = props;\r\n  const initialState = props.values;\r\n\r\n  const [surveyValues, setSurveyValues] = useReducer(\r\n    (curVals, newVals) => ({ ...curVals, ...newVals }), initialState\r\n  );\r\n\r\n  const [errors, setErrors] = useState({ interestPrograms: 0, learnerAmount: 0, learnerAge: 0, learnerGrade: 0, ethnicityDistribution: 0, genderDistribution: 0, learnerSubjects: 0 , learnerAttendFrequency: 0 })\r\n  const { interestPrograms, learnerAmount, learnerAge, learnerGrade, ethnicityDistribution, ethnicityDistributionCheck, genderDistribution, genderDistributionCheck, learnerSubjects, learnerAttendFrequency, learnerAttendFrequencyCheck } = surveyValues;\r\n\r\n  useEffect(() => animateScroll.scrollToTop({ duration: 100 }), []);\r\n  useEffect(() => setValues(surveyValues), [surveyValues]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setSurveyValues({ [name]: value });\r\n  };\r\n  const handlePrevious = () => setPage(1);\r\n  const handleNext = () => {\r\n    let newErrors = Object.assign({}, errors);\r\n    let isError = false;\r\n\r\n    for (let field in errors) {\r\n      if (\r\n        ((field === 'interestPrograms') && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).length > 0)) ||\r\n        (((field === 'learnerGrade') || (field === 'learnerSubjects')) && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).includes(1))) ||\r\n        (((field === 'learnerAmount') || (field === 'learnerAge')) && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).length > 0) || !otherCheck(surveyValues[field]) ||\r\n        ((field === 'ethnicityDistribution') && !surveyValues['ethnicityDistributionCheck'] && (!ethnicityDistribution || (Object.values(ethnicityDistribution).reduce((accumulator, currentValue) => parseInt(accumulator) + (parseInt(currentValue) || 0), 0) !== 100))) ||\r\n        ((field === 'genderDistribution') && !surveyValues['genderDistributionCheck'] && (!genderDistribution || (Object.values(genderDistribution).reduce((accumulator, currentValue) => parseInt(accumulator) + (parseInt(currentValue) || 0), 0) !== 100))) ||\r\n        ((field === 'learnerAttendFrequency') && !surveyValues[field] && !surveyValues['learnerAttendFrequencyCheck'])\r\n      ) {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 1 });\r\n        isError = true;\r\n      } else {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 0 });\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    if (!isError) setPage(3);\r\n    else animateScroll.scrollToTop({ duration: 100 });\r\n  };\r\n\r\n  const handleSetBlocks = (fieldName, blockValues) => setSurveyValues({ [fieldName]: blockValues });\r\n  const otherCheck = surveyBlockValue => {\r\n    // return true if (Other is NOT selected) or if (Other IS selected and Other-Text IS filled)\r\n    // return false if (Other IS selected and Other-Text is NOT filled)\r\n    if (!((typeof surveyBlockValue === 'object') && (surveyBlockValue !== null))) {\r\n      return true\r\n    }\r\n    let keys = Object.keys(surveyBlockValue);\r\n    if (\r\n      (keys.includes('Other') && surveyBlockValue['Other']) ||\r\n      (keys.includes('exclusive') && (surveyBlockValue['exclusive'] === 'Other'))\r\n    ) {\r\n      return keys.includes('Other-Text') && (surveyBlockValue['Other-Text'] !== '')\r\n    }\r\n    return true\r\n  };\r\n  const handleSetCheckbox = (fieldCheck, checkState) => {\r\n    let fieldName = fieldCheck.slice(0, -5);\r\n    if (checkState) {\r\n      setSurveyValues({ [fieldName]: '' });\r\n      setErrors(Object.assign({}, errors, { [fieldName]: 0 }));\r\n    }\r\n    setSurveyValues({ [fieldCheck]: checkState });\r\n  };\r\n  const handleSetGroupInput = (e, fieldName) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    if (surveyValues[fieldName]) {\r\n      let fieldCopy = Object.assign({}, surveyValues[fieldName], { [name]: value });\r\n      setSurveyValues({ [fieldName]: fieldCopy })\r\n    } else {\r\n      setSurveyValues({ [fieldName]: { [name]: value }})\r\n    }\r\n  }\r\n\r\n  const interestProgramsOptions = {\r\n    fieldName: 'interestPrograms',\r\n    fieldValue: interestPrograms,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Yes', 'No'\r\n    ],\r\n    exclusive: true\r\n  };\r\n  const learnerAmountOptions = {\r\n    className: 'learner-amount',\r\n    fieldName: 'learnerAmount',\r\n    fieldValue: learnerAmount,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      '1-50', '51-75', '76-120'\r\n    ],\r\n    exclusive: true,\r\n    otherOptions: {\r\n      'name': 'Other',\r\n      'placeholder': ''\r\n    }\r\n  };\r\n  const learnerAgeOptions = {\r\n    className: 'learner-age',\r\n    fieldName: 'learnerAge',\r\n    fieldValue: learnerAge,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      '9-13', '14-25'\r\n    ],\r\n    exclusive: true,\r\n    otherOptions: {\r\n      'name': 'Other',\r\n      'placeholder': ''\r\n    }\r\n  };\r\n  const learnerGradeOptions = {\r\n    fieldName: 'learnerGrade',\r\n    fieldValue: learnerGrade,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Elementary School', 'Middle School', 'High School', 'College'\r\n    ],\r\n    noneOptions: {\r\n      'name': 'Not Applicable'\r\n    }\r\n  };\r\n  const ethnicityDistributionCheckOptions = {\r\n    className: 'group-check',\r\n    fieldName: 'ethnicityDistributionCheck',\r\n    fieldValue: ethnicityDistributionCheck,\r\n    fieldLabel: 'No Preference',\r\n    setFieldValue: handleSetCheckbox\r\n  };\r\n  const genderDistributionCheckOptions = {\r\n    className: 'group-check',\r\n    fieldName: 'genderDistributionCheck',\r\n    fieldValue: genderDistributionCheck,\r\n    fieldLabel: 'No Preference',\r\n    setFieldValue: handleSetCheckbox\r\n  };\r\n  const learnerSubjectsOptions = {\r\n    fieldName: 'learnerSubjects',\r\n    fieldValue: learnerSubjects,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Business', 'Science', 'Technology', 'Engineering',\r\n      'Math', 'Art', 'Music', 'History',\r\n      'Leadership', 'Literature', 'Education', 'Computer Programming',\r\n      'Marketing', 'Foreign Language', 'Health', 'Design'\r\n    ],\r\n    otherOptions: {\r\n      'name': 'Other',\r\n      'placeholder': 'E.g. Psychology, Performing Arts'\r\n    },\r\n    noneOptions: {\r\n      'name': 'None'\r\n    }\r\n  };\r\n  const learnerAttendFrequencyCheckOptions = {\r\n    className: 'inline-disabler',\r\n    fieldName: 'learnerAttendFrequencyCheck',\r\n    fieldValue: learnerAttendFrequencyCheck,\r\n    fieldLabel: 'I\\'m not interested in a partnership.',\r\n    setFieldValue: handleSetCheckbox\r\n  };\r\n\r\n  return (\r\n    <div className='corporation-page-2-container'>\r\n      <h1>Developing Talent</h1>\r\n      <h3>All fields required unless marked as \"Optional\".</h3>\r\n      <div className='field-container'>\r\n        <Tooltip arrow={true} open={errors['interestPrograms'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Would you be interested in helping to create educational and professional development programs if you had the resources required (i.e. curriculum, access to potential students, other professionals, etc.)?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={interestProgramsOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['learnerAmount'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>How many learners, students, and emerging talent do you want to impact?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={learnerAmountOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['learnerAge'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What is the age-range of the students you would like to impact?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={learnerAgeOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['learnerGrade'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What is the grade-level of the students you would like to impact?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={learnerGradeOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['ethnicityDistribution'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required: Total is 100'>\r\n          <div className='question-container'>\r\n            <h2>What are the percentages of race/ethnicity of your students?</h2>\r\n            <h3 className='txt-clarify'>Please provide your best estimate:</h3>\r\n            <div className={'group-wrapper' + (ethnicityDistributionCheck ? ' disabled' : '')}>\r\n              <label onClick={e => e.preventDefault()}>Black/African-American\r\n                <input type='number' min='0' max='100' name='black/african-american'\r\n                  value={ethnicityDistribution ? ethnicityDistribution['black/african-american'] : ''}\r\n                  onChange={e => handleSetGroupInput(e, 'ethnicityDistribution')}\r\n                  disabled={ethnicityDistributionCheck} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>Hispanic/Non-Black\r\n                <input type='number' min='0' max='100' name='hispanic/non-black'\r\n                  value={ethnicityDistribution ? ethnicityDistribution['hispanic/non-black'] : ''}\r\n                  onChange={e => handleSetGroupInput(e, 'ethnicityDistribution')}\r\n                  disabled={ethnicityDistributionCheck} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>Asian\r\n                <input type='number' min='0' max='100' name='asian'\r\n                  value={ethnicityDistribution ? ethnicityDistribution['asian'] : ''}\r\n                  onChange={e => handleSetGroupInput(e, 'ethnicityDistribution')}\r\n                  disabled={ethnicityDistributionCheck} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>Native American\r\n                <input type='number' min='0' max='100' name='native american'\r\n                  value={ethnicityDistribution ? ethnicityDistribution['native american'] : ''}\r\n                  onChange={e => handleSetGroupInput(e, 'ethnicityDistribution')}\r\n                  disabled={ethnicityDistributionCheck} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>Pacific Islander\r\n                <input type='number' min='0' max='100' name='pacific islander'\r\n                  value={ethnicityDistribution ? ethnicityDistribution['pacific islander'] : ''}\r\n                  onChange={e => handleSetGroupInput(e, 'ethnicityDistribution')}\r\n                  disabled={ethnicityDistributionCheck} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>White\r\n                <input type='number' min='0' max='100' name='white'\r\n                  value={ethnicityDistribution ? ethnicityDistribution['white'] : ''}\r\n                  onChange={e => handleSetGroupInput(e, 'ethnicityDistribution')}\r\n                  disabled={ethnicityDistributionCheck} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>Other\r\n                <input type='number' min='0' max='100' name='other'\r\n                  value={ethnicityDistribution ? ethnicityDistribution['other'] : ''}\r\n                  onChange={e => handleSetGroupInput(e, 'ethnicityDistribution')}\r\n                  disabled={ethnicityDistributionCheck} />\r\n              </label>\r\n              <label className='group-total' onClick={e => e.preventDefault()}>Total\r\n                <input type='number' name='Total'\r\n                  value={ethnicityDistribution ? Object.values(ethnicityDistribution).reduce((accumulator, currentValue) => parseInt(accumulator) + (parseInt(currentValue) || 0), 0) : 0}\r\n                  disabled={ethnicityDistributionCheck} />\r\n              </label>\r\n            </div>\r\n            <Checkbox options={ethnicityDistributionCheckOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['genderDistribution'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required: Total is 100'>\r\n          <div className='question-container'>\r\n            <h2>What are the percentages of gender of your students you would like to impact?</h2>\r\n            <h3 className='txt-clarify'>Please provide your best estimate:</h3>\r\n            <div className={'group-wrapper' + (genderDistributionCheck ? ' disabled' : '')}>\r\n              <label onClick={e => e.preventDefault()}>Female\r\n                <input type='number' min='0' max='100' name='female'\r\n                  value={genderDistribution ? genderDistribution['female'] : ''}\r\n                  onChange={e => handleSetGroupInput(e, 'genderDistribution')}\r\n                  disabled={genderDistributionCheck} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>Male\r\n                <input type='number' min='0' max='100' name='male'\r\n                  value={genderDistribution ? genderDistribution['male'] : ''}\r\n                  onChange={e => handleSetGroupInput(e, 'genderDistribution')}\r\n                  disabled={genderDistributionCheck} />\r\n              </label>\r\n              <label onClick={e => e.preventDefault()}>Non-Binary\r\n                <input type='number' min='0' max='100' name='non-binary'\r\n                  value={genderDistribution ? genderDistribution['non-binary'] : ''}\r\n                  onChange={e => handleSetGroupInput(e, 'genderDistribution')}\r\n                  disabled={genderDistributionCheck} />\r\n              </label>\r\n              <label className='group-total' onClick={e => e.preventDefault()}>Total\r\n                <input type='number' name='Total'\r\n                  value={genderDistribution ? Object.values(genderDistribution).reduce((accumulator, currentValue) => parseInt(accumulator) + (parseInt(currentValue) || 0), 0) : 0}\r\n                  disabled={genderDistributionCheck} />\r\n              </label>\r\n            </div>\r\n            <Checkbox options={genderDistributionCheckOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['learnerSubjects'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>What subject(s) or fields would you like your students to learn and engage in at TIV?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={learnerSubjectsOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <Tooltip arrow={true} open={errors['learnerAttendFrequency'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>About how many days per month would you like students to attend TIV programs?</h2>\r\n            <h3 className='txt-clarify'>Please provide your best estimate:</h3>\r\n            <p className={'inline-input' + (learnerAttendFrequencyCheck ? ' disabled' : '')}>\r\n              Students would attend about <input type='number' min='0' max='30' name='learnerAttendFrequency' value={learnerAttendFrequency || ''} onChange={e => handleChange(e)} disabled={learnerAttendFrequencyCheck} /> times per month.\r\n            </p>\r\n            <Checkbox options={learnerAttendFrequencyCheckOptions} />\r\n          </div>\r\n        </Tooltip>\r\n      </div>\r\n      <div className='btn-container'>\r\n        <button className='btn-prev' type='button'\r\n          onClick={() => handlePrevious()}>\r\n          Previous\r\n        </button>\r\n        <button className='btn-next' type='button'\r\n          onClick={() => handleNext()}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { animateScroll } from 'react-scroll';\r\nimport Checkbox from '../Checkbox';\r\nimport BlockSelection from '../BlockSelection';\r\n\r\nexport default props => {\r\n  const isTabletorMobile = useMediaQuery({ maxWidth: 767.98 });\r\n  const { setSurvey, setPage, setLogo, setValues } = props;\r\n  const initialState = props.values;\r\n\r\n  const [surveyValues, setSurveyValues] = useReducer(\r\n    (curVals, newVals) => ({ ...curVals, ...newVals }), initialState\r\n  );\r\n\r\n  const [errors, setErrors] = useState({ interestSponsor: 0, interestSponsorSpecify: 0, interestHost: 0, interestHostFrequency: 0, interestVolunteer: 0, interestVolunteerRole: 0, interestDonate: 0, interestDonateType: 0, interestTIV: 0 });\r\n  const { interestSponsor, interestSponsorSpecify, interestHost, interestHostFrequencyAmount, interestHostFrequencyTime, interestVolunteer, interestVolunteerRole, interestDonate, interestDonateType, interestTIV, interestTIVCheck } = surveyValues;\r\n\r\n  useEffect(() => animateScroll.scrollToTop({ duration: 100 }), []);\r\n  useEffect(() => setValues(surveyValues), [surveyValues]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setSurveyValues({ [name]: value })\r\n  };\r\n  const handlePrevious = () => setPage(2);\r\n  const handleSubmit = () => {\r\n    let newErrors = Object.assign({}, errors);\r\n    let isError = false;\r\n\r\n    for (let field in errors) {\r\n      if (\r\n        (((field === 'interestSponsor') || (field === 'interestHost') || (field === 'interestVolunteer') || (field === 'interestDonate') || (field === 'interestTIV')) && ((typeof surveyValues[field] === 'object') && (surveyValues[field] !== null)) && (!Object.values(surveyValues[field]).length > 0)) ||\r\n        (\r\n          (field === 'interestSponsorSpecify') &&\r\n          ((typeof surveyValues['interestSponsor'] === 'object') && (surveyValues['interestSponsor'] !== null)) &&\r\n          Object.values(surveyValues['interestSponsor'])[0] === 'Specific Program' &&\r\n          !surveyValues[field]\r\n        ) ||\r\n        (\r\n          (field === 'interestHostFrequency') &&\r\n          ((typeof surveyValues['interestHost'] === 'object') && (surveyValues['interestHost'] !== null)) &&\r\n          Object.values(surveyValues['interestHost'])[0] === 'Yes' &&\r\n          (!surveyValues['interestHostFrequencyAmount'] || !Object.values(surveyValues['interestHostFrequencyTime']).length > 0)\r\n        ) ||\r\n        (\r\n          (field === 'interestVolunteerRole') &&\r\n          ((typeof surveyValues['interestVolunteer'] === 'object') && (surveyValues['interestVolunteer'] !== null)) &&\r\n          Object.values(surveyValues['interestVolunteer'])[0] === 'Yes' &&\r\n          ((typeof surveyValues['interestVolunteerRole'] === 'object') && (surveyValues['interestVolunteerRole'] !== null)) &&\r\n          !Object.values(surveyValues[field]).includes(1)\r\n        ) ||\r\n        (\r\n          (field === 'interestDonateType') &&\r\n          ((typeof surveyValues['interestDonate'] === 'object') && (surveyValues['interestDonate'] !== null)) &&\r\n          Object.values(surveyValues['interestDonate'])[0] === 'Yes' &&\r\n          ((typeof surveyValues['interestDonateType'] === 'object') && (surveyValues['interestDonateType'] !== null)) &&\r\n          !Object.values(surveyValues[field]).includes(1) || !otherCheck(surveyValues[field])\r\n        )\r\n      ) {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 1 });\r\n        isError = true;\r\n      } else {\r\n        newErrors = Object.assign({}, newErrors, { [field]: 0 });\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    if (!isError) {\r\n      props.submit();\r\n      setLogo('img/logo_only.png');\r\n      setSurvey('thanks');\r\n    }\r\n    else animateScroll.scrollToTop({ duration: 100 });\r\n  };\r\n\r\n  const handleSetBlocks = (fieldName, blockValues) => setSurveyValues({ [fieldName]: blockValues });\r\n  const otherCheck = surveyBlockValue => {\r\n    // return true if (Other is NOT selected) or if (Other IS selected and Other-Text IS filled)\r\n    // return false if (Other IS selected and Other-Text is NOT filled)\r\n    if (!((typeof surveyBlockValue === 'object') && (surveyBlockValue !== null))) {\r\n      return true\r\n    }\r\n    let keys = Object.keys(surveyBlockValue);\r\n    if (\r\n      (keys.includes('Other') && surveyBlockValue['Other']) ||\r\n      (keys.includes('exclusive') && (surveyBlockValue['exclusive'] === 'Other'))\r\n    ) {\r\n      return keys.includes('Other-Text') && (surveyBlockValue['Other-Text'] !== '')\r\n    }\r\n    return true\r\n  };\r\n  const handleSetCheckbox = (fieldCheck, checkState) => setSurveyValues({ [fieldCheck]: checkState });\r\n\r\n  const interestSponsorOptions = {\r\n    fieldName: 'interestSponsor',\r\n    fieldValue: interestSponsor,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'TIV', 'Specific Program', 'School', 'Organization'\r\n    ],\r\n    exclusive: true,\r\n    noneOptions: {\r\n      'name': 'None'\r\n    }\r\n  };\r\n  const interestHostOptions = {\r\n    fieldName: 'interestHost',\r\n    fieldValue: interestHost,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Yes', 'No'\r\n    ],\r\n    exclusive: true\r\n  };\r\n  const interestHostFrequencyTimeOptions = {\r\n    fieldName: 'interestHostFrequencyTime',\r\n    fieldValue: interestHostFrequencyTime,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'month', 'year'\r\n    ],\r\n    exclusive: true,\r\n    merge: true\r\n  };\r\n  const interestVolunteerOptions = {\r\n    fieldName: 'interestVolunteer',\r\n    fieldValue: interestVolunteer,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Yes', 'No'\r\n    ],\r\n    exclusive: true\r\n  };\r\n  const interestVolunteerRoleOptions = {\r\n    fieldName: 'interestVolunteerRole',\r\n    fieldValue: interestVolunteerRole,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Instructor', 'Mentor', 'Speaker', 'Curriculum Design'\r\n    ]\r\n  }\r\n  const interestDonateOptions = {\r\n    fieldName: 'interestDonate',\r\n    fieldValue: interestDonate,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Yes', 'No'\r\n    ],\r\n    exclusive: true\r\n  };\r\n  const interestDonateTypeOptions = {\r\n    fieldName: 'interestDonateType',\r\n    fieldValue: interestDonateType,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Space', 'Technology', 'Printing', 'Sponsorship'\r\n    ],\r\n    otherOptions: {\r\n      'name': 'Other',\r\n      'placeholder': ''\r\n    }\r\n  };\r\n  const interestTIVOptions = {\r\n    fieldName: 'interestTIV',\r\n    fieldValue: interestTIV,\r\n    setFieldValue: handleSetBlocks,\r\n    blocks: [\r\n      'Yes', 'No'\r\n    ],\r\n    exclusive: true\r\n  };\r\n  const interestTIVCheckOptions = {\r\n    className: 'interest-tiv-check',\r\n    fieldName: 'interestTIVCheck',\r\n    fieldValue: interestTIVCheck,\r\n    fieldLabel: 'I would like to receive updates regarding TIV.',\r\n    setFieldValue: handleSetCheckbox\r\n  };\r\n\r\n  return (\r\n    <div className='corporation-page-3-container'>\r\n      <h1>Providing Resources</h1>\r\n      <h3>All fields required unless marked as \"Optional\".</h3>\r\n      <div className='field-container'>\r\n        <Tooltip arrow={true} open={errors['interestSponsor'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Are you interested in sponsoring TIV, a specific program, school or organization?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={interestSponsorOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        {((typeof surveyValues['interestSponsor'] === 'object') && (surveyValues['interestSponsor'] !== null)) && Object.values(surveyValues['interestSponsor'])[0] === 'Specific Program' ? <Tooltip arrow={true} open={errors['interestSponsorSpecify'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container conditional'>\r\n            <h2>What is the name of the specific program, school or organization?</h2>\r\n            <label className='w-full'>Please specify:\r\n              <input type='text' name='interestSponsorSpecify' value={interestSponsorSpecify || ''}\r\n                onChange={e => handleChange(e)} />\r\n            </label>\r\n          </div>\r\n        </Tooltip> : ''}\r\n        <Tooltip arrow={true} open={errors['interestHost'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Are you interested in hosting a TIV experience at your company?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={interestHostOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        {((typeof surveyValues['interestHost'] === 'object') && (surveyValues['interestHost'] !== null)) && Object.values(surveyValues['interestHost'])[0] === 'Yes' ? <Tooltip arrow={true} open={errors['interestHostFrequency'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container conditional'>\r\n            <h2>About how many times a month or year would you be interested in hosting?</h2>\r\n            <h3 className='txt-clarify'>Please provide your best estimate:</h3>\r\n            <p className='inline-input'>\r\n              Students can attend about <input type='number' min='0' max='30' name='interestHostFrequencyAmount' value={interestHostFrequencyAmount || ''} onChange={e => handleChange(e)} /> days a <BlockSelection options={interestHostFrequencyTimeOptions} />\r\n            </p>\r\n          </div>\r\n        </Tooltip> : ''}\r\n        <Tooltip arrow={true} open={errors['interestVolunteer'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Are you interested in your colleagues/employees volunteering their time and expertise to TIV?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={interestVolunteerOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        {((typeof surveyValues['interestVolunteer'] === 'object') && (surveyValues['interestVolunteer'] !== null)) && Object.values(surveyValues['interestVolunteer'])[0] === 'Yes' ? <Tooltip arrow={true} open={errors['interestVolunteerRole'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container conditional'>\r\n            <h2>What would they be interested in volunteering as?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={interestVolunteerRoleOptions} />\r\n          </div>\r\n        </Tooltip> : ''}\r\n        <Tooltip arrow={true} open={errors['interestDonate'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Would you be interested in possibly donating resources to a TIV program?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={interestDonateOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        {((typeof surveyValues['interestDonate'] === 'object') && (surveyValues['interestDonate'] !== null)) && Object.values(surveyValues['interestDonate'])[0] === 'Yes' ? <Tooltip arrow={true} open={errors['interestDonateType'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container conditional'>\r\n            <h2>What resources would you be donating?</h2>\r\n            <h3 className='txt-block-select'>Please select all that apply:</h3>\r\n            <BlockSelection options={interestDonateTypeOptions} />\r\n          </div>\r\n        </Tooltip> : ''}\r\n        <Tooltip arrow={true} open={errors['interestTIV'] ? true : false} placement={isTabletorMobile ? 'top-start' : 'left-start'} title='Required'>\r\n          <div className='question-container'>\r\n            <h2>Would you be interested in learning more about TIV and how our company can help make an impact?</h2>\r\n            <h3 className='txt-block-select'>Please select one:</h3>\r\n            <BlockSelection options={interestTIVOptions} />\r\n          </div>\r\n        </Tooltip>\r\n        <div className='question-container'>\r\n          <Checkbox options={interestTIVCheckOptions} />\r\n        </div>\r\n      </div>\r\n      <div className='btn-container'>\r\n        <button className='btn-prev' type='button'\r\n          onClick={() => handlePrevious()}>\r\n          Previous\r\n        </button>\r\n        <button className='btn-submit' type='button'\r\n          onClick={() => handleSubmit([])}>\r\n          SUBMIT\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport $ from 'jquery';\r\nimport Page1 from './Page1';\r\nimport Page2 from './Page2';\r\nimport Page3 from './Page3';\r\nimport ProgressBar from '../ProgressBar';\r\nimport {} from './corporation.scss';\r\n\r\nexport default props => {\r\n  const { setSurvey, setLogo } = props;\r\n  const [page, setPage] = useState(1);\r\n  const [values1, setValues1] = useState({});\r\n  const [values2, setValues2] = useState({});\r\n  const [values3, setValues3] = useState({});\r\n\r\n  const submit = () => {\r\n    const data = {\r\n      'Name': values1['name'],\r\n      'Email': values1['email'],\r\n      'Company Name': values1['companyName'],\r\n      'Affiliation/Title': values1['affiliation'],\r\n      'Industry': values1['industry'],\r\n      'City': values1['city'],\r\n      'State': values1['state'],\r\n      'Company Website URL': values1['url'],\r\n\r\n      'Would you be interested in helping to create educational and professional development programs if you had the resources required (i.e. curriculum, access to potential students, other professionals, etc.)?': stringifyBlock(values2['interestPrograms']),\r\n      'How many learners, students, and emerging talent do you want to impact?': stringifyBlock(values2['learnerAmount']),\r\n      'What is the age-range of the students you would like to impact?': stringifyBlock(values2['learnerAge']),\r\n      'What is the grade-level of the students you would like to impact?': stringifyBlock(values2['learnerGrade']),\r\n      'What are the percentages of race/ethnicity of your students?': (values2['ethnicityDistributionCheck'] ? 'No Preference' : stringifyGroup(values2['ethnicityDistribution'])),\r\n      'What are the percentages of gender of your students you would like to impact?': (values2['genderDistributionCheck'] ? 'No Preference' : stringifyGroup(values2['genderDistribution'])),\r\n      'What subject(s) or fields would you like your students to learn and engage in at TIV?': stringifyBlock(values2['learnerSubjects']),\r\n      'About how many days per month would you like students to attend TIV programs?': (values2['learnerAttendFrequencyCheck'] ? 'I\\'m not interested in a partnership.' : values2['learnerAttendFrequency']),\r\n\r\n      'Are you interested in sponsoring TIV, a specific program, school or organization?': stringifyBlock(values3['interestSponsor']),\r\n      'What is the name of the specific program, school or organization?': values3['interestSponsorSpecify'],\r\n      'Are you interested in hosting a TIV experience at your company?': stringifyBlock(values3['interestHost']),\r\n      'About how many times a month or year would you be interested in hosting?': values3['interestHostFrequencyAmount'] + ' days a ' + stringifyBlock(values3['interestHostFrequencyTime']),\r\n      'Are you interested in your colleagues/employees volunteering their time and expertise to TIV?': stringifyBlock(values3['interestVolunteer']),\r\n      'What would they be interested in volunteering as?': stringifyBlock(values3['interestVolunteerRole']),\r\n      'Would you be interested in possibly donating resources to a TIV program?': stringifyBlock(values3['interestDonate']),\r\n      'What resources would you be donating?': stringifyBlock(values3['interestDonateType']),\r\n      'Would you be interested in learning more about TIV and how our company can help make an impact?': stringifyBlock(values3['interestTIV']),\r\n      'I would like to receive updates regarding TIV.': (values3['interestTIVCheck'] ? 'True' : 'False')\r\n    }\r\n\r\n    console.log(data)\r\n\r\n    $.ajax({\r\n      url: process.env.REACT_APP_CORPORATION_SURVEY_URL,\r\n      method: 'GET',\r\n      dataType: 'json',\r\n      data: data\r\n    })\r\n  };\r\n\r\n  const stringifyBlock = blockData => {\r\n    if (!blockData) return '';\r\n    let labels = Object.keys(blockData);\r\n    let stringOutput = '';\r\n\r\n    if (labels.includes('exclusive')) {\r\n      stringOutput += blockData['exclusive'];\r\n      if (labels.includes('Other-Text') && blockData['Other-Text']) stringOutput += ': ' + blockData['Other-Text'];\r\n    } else {\r\n      for (let label in blockData) {\r\n        if (blockData[label] === 1) {\r\n          stringOutput += (stringOutput ? ', ' : '') + label;\r\n          if (label === 'Other') stringOutput += ': ' + blockData['Other-Text'];\r\n        }\r\n      }\r\n    }\r\n\r\n    return stringOutput;\r\n  };\r\n  const stringifyGroup = groupData => {\r\n    let groupArr = [];\r\n    for (let key in groupData) groupArr.push(key + ': ' + groupData[key]);\r\n    return groupArr.join(', ');\r\n  };\r\n\r\n  return <>\r\n    <ProgressBar survey='corporation' page={page} />\r\n    {page === 1 ? <Page1 setSurvey={setSurvey} setPage={setPage} values={values1} setValues={setValues1} /> : ''}\r\n    {page === 2 ? <Page2 setPage={setPage} values={values2} setValues={setValues2} /> : ''}\r\n    {page === 3 ? <Page3 setSurvey={setSurvey} setPage={setPage} setLogo={setLogo} values={values3} setValues={setValues3} submit={submit} /> : ''}\r\n  </>\r\n}\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return <div className='thanks-container'>\r\n    <i className='fas fa-check-circle'></i>\r\n    <p>Thank you for your submission!</p>\r\n  </div>\r\n}\r\n","import React, { useState } from 'react';\nimport Landing from './components/Landing';\nimport SurveyLearner from './components/survey_learner/Survey';\nimport SurveyProfessional from './components/survey_professional/Survey';\nimport SurveyOrganization from './components/survey_organization/Survey';\nimport SurveyCorporation from './components/survey_corporation/Survey';\nimport Thanks from './components/Thanks';\nimport './App.scss';\nimport './components/survey.scss';\nimport './components/mui.scss';\nimport './components/survey_mobile.scss';\n\nexport default () => {\n  const [survey, setSurvey] = useState('Landing');\n  const [logo, setLogo] = useState('img/logo_dark.png');\n  const renderSurvey = () => {\n    switch (survey) {\n      case 'learner/student':\n        return <div className='survey-container'><SurveyLearner setSurvey={setSurvey} setLogo={setLogo} /></div>\n      case 'professional':\n        return <div className='survey-container'><SurveyProfessional setSurvey={setSurvey} setLogo={setLogo} /></div>\n      case 'organization/academic institution':\n        return <div className='survey-container'><SurveyOrganization setSurvey={setSurvey} setLogo={setLogo} /></div>\n      case 'corporation':\n        return <div className='survey-container'><SurveyCorporation setSurvey={setSurvey} setLogo={setLogo} /></div>\n      default:\n        return ''\n    }\n  }\n\n  return (\n    <div className='App'>\n      {survey === 'Landing' ? <Landing setSurvey={setSurvey} /> : ''}\n      {survey !== 'Landing' ? <div className='survey-header'>\n        <img className={'logo' + (logo === 'img/logo_dark.png' ? '-survey' : '-thanks')} src={logo} alt='TIV - Technology Innovation Village' />\n      </div> : ''}\n      {survey !== 'Landing' ? renderSurvey() : ''}\n      {survey === 'thanks' ? <Thanks /> : ''}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}